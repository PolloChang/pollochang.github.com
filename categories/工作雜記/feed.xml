<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工作雜記 on PolloChang 工作筆記</title>
    <link>http://pollochang.work/categories/%E5%B7%A5%E4%BD%9C%E9%9B%9C%E8%A8%98/</link>
    <description>Recent content in 工作雜記 on PolloChang 工作筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Fri, 26 Apr 2024 07:00:46 +0800</lastBuildDate><atom:link href="http://pollochang.work/categories/%E5%B7%A5%E4%BD%9C%E9%9B%9C%E8%A8%98/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CLI 檢查網站憑證</title>
      <link>http://pollochang.work/worknot/worknot-20240426/</link>
      <pubDate>Fri, 26 Apr 2024 07:00:46 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240426/</guid>
      <description>curl curl https://www.google.com -v -k 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; 執行結果 ❯ curl https://www.google.com -v -k 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; * Connected to www.google.com (2404:6800:4012:2::2004) port 443 (#0) * subject: CN=www.google.com * expire date: Jun 10 20:38:48 2024 GMT &amp;lt; expires: -1 &amp;lt; set-cookie: 1P_JAR=2024-04-25-23; expires=Sat, 25-May-2024 23:03:14 GMT; path=/; domain=.google.com; Secure &amp;lt; set-cookie: AEC=AQTF6Hw4gUm8n5W0uPUDTe6vEa8fTROwT6DEAUWQ6FTKMp52DrhWnROmmw; expires=Tue, 22-Oct-2024 23:03:14 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax &amp;lt; set-cookie: NID=513=TZnGjLI3KvFu_SLuZJCrPktY6GMHeuK3Hg8ht9ojqTr_OgX460hGPFUccru0PZr2J1pWw_mynjevt8eTyWu0pN9gPXi4hcJkFUQzR9SJlTfypnftjNlM9CGEu1956tVk67u6tWkrNRa2zi8QdXzULlXJZ2wO1tBrzCGnmRJ4nyg; expires=Fri, 25-Oct-2024 23:03:14 GMT; path=/; domain=.</description>
    </item>
    
    <item>
      <title>linux 資料基礎分析</title>
      <link>http://pollochang.work/worknot/worknot-20240425/</link>
      <pubDate>Thu, 25 Apr 2024 22:16:23 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240425/</guid>
      <description> grep: 過濾資料 grep 要過濾出的資料 exampleFileSource.log &amp;gt; exampleFile.log cut 切除每行前 60 個字元 cut -b 60- exampleFile.log &amp;gt; exampleFile.2.log sort: 類似 sql distinct 效果 grep 要過濾出的資料 exampleFile.2.log | sort --unique </description>
    </item>
    
    <item>
      <title>程式進化史</title>
      <link>http://pollochang.work/worknot/worknot-20240416/</link>
      <pubDate>Tue, 16 Apr 2024 07:14:27 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240416/</guid>
      <description>筆記一下這些年我寫的糞 code 的優化流程
一開始寫的 被檢測為 CyclomaticComplexity 。程式如下:
package work.pollochang.twgcb import grails.gorm.transactions.Transactional import grails.web.servlet.mvc.GrailsParameterMap import org.hibernate.criterion.CriteriaSpecification import org.hibernate.type.StandardBasicTypes import work.pollochang.util.PFilterResult import work.pollochang.util.PFilterType /** * TWGCB 資料處理 */ @Transactional class TwGcbService { /** * 查詢 * @param params * @param filterType * @return 查詢結果 */ PFilterResult filter( GrailsParameterMap params, PFilterType filterType = PFilterType.DEFAULT ) { PFilterResult pFilterResult = new PFilterResult() params.max = (params.max ?: &amp;#39;10&amp;#39;).toInteger() params.offset = (params?.offset ?: &amp;#39;0&amp;#39;).toInteger() List&amp;lt;Twgcb&amp;gt; twgcbList = Twgcb.</description>
    </item>
    
    <item>
      <title>annotation 與 AOP</title>
      <link>http://pollochang.work/worknot/worknot-20240413/</link>
      <pubDate>Sat, 13 Apr 2024 17:12:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240413/</guid>
      <description>範例程式完整專案:
Java 基本內置 annotation @Override 重寫父層的方法
@Deprecated 表示該方法再為雷會被棄用
@SuppressWarnings 主要的用處就是忽略警告信息
規定 annotation 可以放在哪裡 類別 ElementType.TYPE : 能修飾類、接口、枚舉、注解 ElementType.FIELD : 能修飾字段、枚舉的常量 ElementType.METHOD : 能修飾方法 ElementType.PARAMETER : 能修飾方法參數 ElementType.CONSTRUCTOR : 能修飾構造函數 ElementType.LOCAL_VARIABLE : 能修飾局部變量 ElementType.ANNOTATION_TYPE : 能修飾注解 (元注解就是此種) ElementType.PACKAGE : 能修飾包 ElementType.TYPE_PARAMETER: (java8)類型參數聲明 ElementType.TYPE_USE: (java8)使用類型 ElementType.MODULE: (java9)模組聲明 ElementType.RECORD_COMPONENT: (java16)記錄組件 原始碼 /* * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved. * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</description>
    </item>
    
    <item>
      <title>KDE 桌面 CLI</title>
      <link>http://pollochang.work/worknot/worknot-20240409/</link>
      <pubDate>Tue, 09 Apr 2024 10:59:52 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240409/</guid>
      <description>KED 強制登出使用者 sudo pkill -KILL -u [username]] 是直接強制踢出指定使用者所有程序</description>
    </item>
    
    <item>
      <title>Mozilla Public License Version 2.0 中英文對照</title>
      <link>http://pollochang.work/worknot/worknot-20240408/</link>
      <pubDate>Mon, 08 Apr 2024 22:39:41 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240408/</guid>
      <description>英文原文 MOZILLA PUBLIC LICENSE Version 2.0 1. Definitions 1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software. 1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor&amp;#39;s Contribution. 1.3. “Contribution” means Covered Software of a particular Contributor. 1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.</description>
    </item>
    
    <item>
      <title>windows 透過 CLI 檢查有沒有自動更新</title>
      <link>http://pollochang.work/worknot/worknot-20240328/</link>
      <pubDate>Thu, 28 Mar 2024 22:39:41 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240328/</guid>
      <description>今天突然收到客戶需要檢查windows 有沒有設定自動檢查更新，因為有多台實在懶得一台一台進入，然後一個一個點擊視窗擷圖，因此想說有沒有輸入 CLI 指令檢查的方法。
windows server 2000 以下是操作的版本
windows server
指令
reg query &amp;#34;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update&amp;#34; /v AUOptions 輸出結果 Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved. C:\Users\james&amp;gt;reg query &amp;#34;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update&amp;#34; /v AUOptions HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update AUOptions REG_DWORD 0x4 說明 AUOptions (REG_DWORD)：
1：在 [自動更新] 中停用 [讓我的電腦保持在最新狀態]。 2：通知下載和安裝。 3：自動下載並通知安裝。 4：自動下載及排程安裝。 5：允許本機系統管理員選取設定模式。 此選項不適用於 Windows 10 或更新版本。 7：通知安裝，並通知重新啟動。 僅限 (Windows Server 2016 和更新版本) windows server 2000 以後 可以透過 sc.exe 查詢 wuauserv 服務</description>
    </item>
    
    <item>
      <title>DB2 切 db2diag.log</title>
      <link>http://pollochang.work/worknot/worknot-20240325/</link>
      <pubDate>Mon, 25 Mar 2024 22:42:18 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240325/</guid>
      <description>今天在工作時碰到 db2diag.log 膨脹到把硬碟塞滿，在這邊分享一下處理過程
db2diag -A 可以很放心去執行，執行過程中不會對現形資料庫運作產生任何影響
操作資料庫環境 OS: RedHat 6 DB2 Version: 9.7 實做流程 檢查本機上可用的空間 [db2inst1@db2-node ~]$ df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/VolGroup-lv_root 44G 36G 6.1G 86% / tmpfs 20G 44M 20G 1% /dev/shm /dev/test1 477M 35M 417M 8% /boot /dev/test2 1.1T 288G 765G 28% /db2 檢查 db2diag.log 所佔用的空間 [db2inst1@db2-node ~]$ ll -h /home/db2inst1/sqllib/db2dump/db2diag.* -rw-rw-rw- 1 db2inst1 db2iadm1 12G Mar 25 22:27 /home/db2inst1/sqllib/db2dump/db2diag.log 執行切 db2diag.log [db2inst1@db2-node ~]$ db2diag -A db2diag: Moving &amp;#34;/home/db2inst1/sqllib/db2dump/db2diag.</description>
    </item>
    
    <item>
      <title>CNS11643 轉 UTF8 經驗</title>
      <link>http://pollochang.work/post/cns11643/</link>
      <pubDate>Thu, 21 Mar 2024 22:02:53 +0800</pubDate>
      
      <guid>http://pollochang.work/post/cns11643/</guid>
      <description>unicode: 萬國碼，設計上一共有17個平面。在第0的平面中，可以直接用一個 UTF-8 表示。 CNS11643: 中文標準交換碼，是中華民國國家標準11643號，簡稱CNS 11643，舊名通用漢字標準交換碼，是中華民國政府為中文資訊處理製定的字元編碼方案，與許多學術圖書館係統採用的CCCII同屬於中文交換碼。CSIC基於ISO 2022定義，和ASCII相容，其EUC版本為EUC-TW。 最近工作上碰到 Oracle 編碼是 US7ASII ， 而存放的有中文資料，於是遇到了轉碼問題。對方的轉碼在Java邏輯大緻上如下：
使用 ISO-8859-1 方式讀取資料庫 解析成字: 兩個位元碼 在將兩個位元碼搜尋對應的 CNS11643 編碼 在將 CNS11643 編碼對應成 unicode 在處理這塊之前其實我分不清處什麼是unicode 跟 UTF-8，後來才知道 UTF 是 Unicode Transformation Format 的縮寫。UTF 主要是為了解決不同平臺傳輸間的問題？
在這次經驗中遇到了CNS11643 對找錶 中 unicode 在 Java 如何處理。我這邊以 𡪨 與 張 這個字為例。
張
以下是這個字的編碼資訊:
CNS11643 網站中 Unicode: 5F35 HTML Entity:	張張 UTF-8 Encoding (hex):	0xE5 0xBC 0xB5 UTF-16 Encoding (hex):	0x5F35 UTF-32 Encoding (hex):	0x00005F35 𡪨</description>
    </item>
    
    <item>
      <title>db-postgresql-note</title>
      <link>http://pollochang.work/post/db-postgresql-note/</link>
      <pubDate>Fri, 15 Mar 2024 22:13:29 +0800</pubDate>
      
      <guid>http://pollochang.work/post/db-postgresql-note/</guid>
      <description>安裝時設定項目 安裝前檢查項目 作業系統版本 資料庫空間需要獨立空間 資料庫備份需要獨立空間 稽核確認: 資料庫連線稽核 稽核確認: 資料庫DDL異動紀錄 定期備份排程 資料庫備份 定期備份排程 user: postgres
0 1 * * * pg_dump -Fc -c dbName &amp;gt; /data/backup/dbName.$(date +%Y%m%d%H%M%S).dump -O # 備份 0 6 * * * /usr/bin/find /data/backup/* -type f -mtime +7 -exec rm -f {} \; # 刪除備份 維運管理 變更權限 change table owner ALTER TABLE [tableName] OWNER TO [userName];. change schema owner ALTER SCHEMA public OWNER TO [userName]; </description>
    </item>
    
    <item>
      <title>docker-note</title>
      <link>http://pollochang.work/post/docker-note/</link>
      <pubDate>Fri, 15 Mar 2024 10:13:29 +0800</pubDate>
      
      <guid>http://pollochang.work/post/docker-note/</guid>
      <description>檢查內部容器使用狀況 docker stats CONTAINER ID NAME CPU % MEM USAGE / LIMIT MEM % NET I/O BLOCK I/O PIDS 59bfcba7ba71 testwebjobmail-testwebJobMail-1 0.89% 2.034GiB / 23GiB 8.84% 22.3MB / 629MB 179MB / 1.38GB 320 4286bd2e6131 testweb-testweb-1 2.42% 2.506GiB / 23GiB 10.89% 246MB / 1.85GB 161MB / 3.55GB 2316 a46f17a27938 test2-test2-1 441.62% 9.58GiB / 23GiB 41.65% 21.7GB / 20.8GB 1.08GB / 9.49GB 383 228ff5b678e8 test3public-test3Public-1 0.17% 2.356GiB / 23GiB 10.24% 1.71GB / 12.</description>
    </item>
    
    <item>
      <title>jmeter CLI 模式</title>
      <link>http://pollochang.work/worknot/worknot-20240314/</link>
      <pubDate>Thu, 14 Mar 2024 22:41:21 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240314/</guid>
      <description>前幾個月在幫專案做壓力測試，因為對方主機執行壓力測試環境是 Linux，於是我尋找一下JMeter 有沒有 CLI 模式下執行測試，順手紀錄一下。
壓力測試 CLI 範例 先廢話不多說，先線上範例，windows 跟 Linux 各舉例一個，Windows是後來順手寫一下，因為這樣我久可以不用開啟GUI介面操作啦。
Linux #!/bin/bash export groupT=&amp;#34;25-60&amp;#34; export homeDir=&amp;#34;/home/pollo&amp;#34; mkdir -p ${homeDir}/reports/${groupT}/report export JVM_ARGS=&amp;#34;-Xms10240m -Xmx10240m&amp;#34; ${homeDir}/apache-jmeter-5.5/bin/jmeter -n -t ${homeDir}/test.jmx -l ${homeDir}/reports/${groupT}/report/report.jtl -e -o ${homeDir}/reports/${groupT}/report windows set groupT=25-60 set homeDir=C:\Users\pollo\Desktop mkdir C:\Users\pollo\Desktop\reports\%groupT%\report set JVM_ARGS=&amp;#34;-Xmx80240m&amp;#34; C:\app\apache-jmeter-5.5\bin\jmeter -n -t C:\Users\pollo\Desktop\test.jmx -l %homeDir%\reports\%groupT%\report\report.jtl -e -o %homeDir%\reports\%groupT%\report 用CLI執行 JMeter 會產生一個Log檔: jmeter.log 。可以方便後追蹤。
參數說明 選項 說明 -n 指定 JMeter 在 CLI 模式下運作 -t jmx 文件路徑 -l jtl 測試紀錄檔案路徑 -j Jmeter.</description>
    </item>
    
    <item>
      <title>MSSQL 雜記</title>
      <link>http://pollochang.work/worknot/worknot-20240313-2/</link>
      <pubDate>Wed, 13 Mar 2024 23:41:46 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240313-2/</guid>
      <description>查詢執行很久的SQL SELECT TOP 10 [總執行時間(秒)] =CAST(a.total_elapsed_time / 1000000.0 AS DECIMAL(16, 2)) , [執行次數] =a.execution_count , [平均執行時間(秒)] =CAST(a.total_elapsed_time / 1000000.0 / a.execution_count AS DECIMAL(16, 2)) , [SQL指令] =SUBSTRING (b.text,(a.statement_start_offset/2) + 1,500) FROM sys.dm_exec_query_stats a CROSS APPLY sys.dm_exec_sql_text(a.sql_handle) as b WHERE a.total_elapsed_time &amp;gt; 0 AND B.[text] NOT LIKE &amp;#39;%SCHEMA_NAME%&amp;#39;--去除一些系統的SQL指令 ORDER BY [平均執行時間(秒)] DESC 查詢資料庫版本 SELECT @@VERSION AS &amp;#39;SQL Server Version Details&amp;#39; 查詢結果 Microsoft SQL Server 2014 - 12.0.2000.8 (X64) Feb 20 2014 20:04:26 Copyright (c) Microsoft Corporation Standard Edition (64-bit) on Windows NT 6.</description>
    </item>
    
    <item>
      <title>Oracle PL/SQL 學習筆記</title>
      <link>http://pollochang.work/worknot/worknot-20240313-1/</link>
      <pubDate>Wed, 13 Mar 2024 14:54:24 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240313-1/</guid>
      <description>切字串成陣列
regexp_substr select regexp_substr ( :str, &amp;#39;[^,]+&amp;#39;, 1, level ) value from dual 參考資料 How to split comma separated value strings into rows in Oracle Database REGEXP_SUBSTR </description>
    </item>
    
    <item>
      <title>Oracle PL/SQL 學習筆記</title>
      <link>http://pollochang.work/worknot/worknot-20240313/</link>
      <pubDate>Wed, 13 Mar 2024 14:42:44 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240313/</guid>
      <description>判斷式 if else if a &amp;gt; b then t := 0; elsif a &amp;gt; c then t := 1; else t := 2; end if; 迴圈 LOOP ... V_LOOP_CONT := V_LOOP_CONT +1 ; IF V_TOTAL_LOOP_CONT &amp;lt;= V_LOOP_CONT THEN EXIT; END IF; END LOOP; package head CREATE OR REPLACE PACKAGE PK_1 AS /****************************************************************************** NAME: PK_1 PURPOSE: PK_1 REVISIONS: Ver Date Author Description --------- ---------- --------------- ------------------------------------ 1.0 2024-03-13 PolloChang 1. 初次新增 ******************************************************************************/ FUNCTION FUNCTION_NAME_1 (P_VAL IN VARCHAR2) RETURN VARCHAR2; END PK_1; body CREATE OR REPLACE PACKAGE PK_1 AS /****************************************************************************** NAME: PK_1 PURPOSE: PK_1 REVISIONS: Ver Date Author Description --------- ---------- --------------- ------------------------------------ 1.</description>
    </item>
    
    <item>
      <title>Linux 發行板核心版本整理</title>
      <link>http://pollochang.work/worknot/worknot-20240309/</link>
      <pubDate>Sat, 09 Mar 2024 11:27:26 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240309/</guid>
      <description>前幾天在工作中因為要導入GBC，但是在客戶的系統當中有非RedHat衍生發行板的系統，所以想說用相近的 Linux Kernel 作為導入的基礎，在這邊把整好的核心版本整理一下
Linux 發行板 Kernel Version Rocky Linux 8 4.18.0 Rocky Linux 9 5.14.0 Red Hat Enterprise Linux 2.1 2.4.9 Red Hat Enterprise Linux 3 2.4.21 Red Hat Enterprise Linux 4 2.6.9 Red Hat Enterprise Linux 5 2.6.18 Red Hat Enterprise Linux 6 2.6.32 Red Hat Enterprise Linux 7 3.10.0 Red Hat Enterprise Linux 8 4.18.0 Red Hat Enterprise Linux 9 5.14.0 Oracle VM 3 4.1 Oracle Linux 6 2.</description>
    </item>
    
    <item>
      <title>oracle 監控SQL 效能</title>
      <link>http://pollochang.work/worknot/worknot-20240305/</link>
      <pubDate>Tue, 05 Mar 2024 00:02:22 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240305/</guid>
      <description>這幾天在調校系統校能，想說從資料庫快取中看看能不能找出花費系統高的系統資源，後來從網路拼拼湊湊加上過去的經驗拼湊下面的監控SQL。拼湊好後，會透過kettle 搭配系統排程匯出查詢結果。
SELECT * FROM ( SELECT 1 QUERY_STATUS, SA.SQL_ID, SA.SQL_TEXT, SA.SQL_FULLTEXT, SA.EXECUTIONS EXECUTIONS, --執行次數 ROUND(SA.ELAPSED_TIME / 1000000, 2) ELAPSED_TIME, --總共執行時間(秒) ROUND(SA.ELAPSED_TIME / 1000000 / SA.EXECUTIONS, 2) ELAPSED_TIME_AVERAGE, --平均執行時間(秒) ROUND(SA.CPU_TIME / 1000000, 2) CPU_TIME, --CPU 執行時間 SA.DISK_READS, ROUND(SA.PLSQL_EXEC_TIME / 1000000, 2) PLSQL_EXEC_TIME, --(秒) ROUND(SA.USER_IO_WAIT_TIME / 1000000, 2) USER_IO_WAIT_TIME, --(秒) SA.COMMAND_TYPE, SA.HASH_VALUE, SA.PARSING_USER_ID PARSING_USER_ID, U.USERNAME USERNAME --帳號名稱 FROM V$SQLAREA SA LEFT JOIN ALL_USERS U ON SA.PARSING_USER_ID = U.USER_ID WHERE SA.EXECUTIONS &amp;gt; 0 ORDER BY (SA.</description>
    </item>
    
    <item>
      <title>oracle 記憶體監控</title>
      <link>http://pollochang.work/worknot/worknot-20240304/</link>
      <pubDate>Mon, 04 Mar 2024 00:02:22 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240304/</guid>
      <description>透過 v$sgastat 、v$pgastat 檢測 SGA PGA 空間使用狀況
select name,used,free, pctused, max_allocated , sysdate opdt from ( select name,total,round(total-free,2) used, round(free,2) free,round((total-free)/total*100,2) pctused, round(MAX_ALLOCATED,2) MAX_ALLOCATED from ( select &amp;#39;SGA&amp;#39; name,(select sum(value/1024/1024) from v$sga) total, (SELECT SUM (bytes/1024/1024) FROM V$SGAINFO WHERE NAME=&amp;#39;Maximum SGA Size&amp;#39;) MAX_ALLOCATED , (select sum(bytes/1024/1024) from v$sgastat where name=&amp;#39;free memory&amp;#39;)free from dual ) union select name,total,round(used,2)used,round(total-used,2)free,round(used/total*100,2) pctused,round(MAX_ALLOCATED,2) from ( select &amp;#39;PGA&amp;#39; name,(select value/1024/1024 total from v$pgastat where name=&amp;#39;aggregate PGA target parameter&amp;#39;)total, (SELECT (value/1024/1024) FROM V$PGASTAT WHERE NAME = &amp;#39;maximum PGA allocated&amp;#39;) MAX_ALLOCATED, (select value/1024/1024 used from v$pgastat where name=&amp;#39;total PGA allocated&amp;#39;)used from dual ) ); 參考資料 Database Reference-8.</description>
    </item>
    
    <item>
      <title>Worknot 20240301</title>
      <link>http://pollochang.work/worknot/worknot-20240301/</link>
      <pubDate>Fri, 01 Mar 2024 23:10:12 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240301/</guid>
      <description>今天在工作上遇到Oracle資料庫突然無法連線，突然想到前幾天在資料庫監控中發現Tablespace已經快滿了，於是著手處理。以下是處理的紀錄。
環境 OS: OracleLinux7 DataBase: Oracle 18c RAC 進入資料庫檢查 Tablespace 空間是否足夠 並著手處理 因為最近一次檢查是發現audit所在的 tablespace 空間快滿了，加上發生資料庫遠端連線無法正常連線，所以只能進入資料庫本機檢查。
進入資料庫主機 切換帳號到oracle 操作 su - oracle 執行 sqlplus sqlplus / as sysdba 執行下列SQL檢查 select a.TABLESPACE_NAME, to_char(a.BYTES/(1024*1024),&amp;#39;999,999&amp;#39;) &amp;#34;Size(MB)&amp;#34;, to_char(round((a.BYTES-b.BYTES)/(1024*1024),0),&amp;#39;999,999&amp;#39;) &amp;#34;Used(MB)&amp;#34;, to_char(b.BYTES/(1024*1024),&amp;#39;999,999&amp;#39;) &amp;#34;Avail(MB)&amp;#34; from (select TABLESPACE_NAME, sum(BYTES) &amp;#34;BYTES&amp;#34; from dba_data_files group by tablespace_name) a, (select TABLESPACE_NAME,sum(BYTES) &amp;#34;BYTES&amp;#34; from dba_free_space group by tablespace_name) b where a.TABLESPACE_NAME=b.TABLESPACE_NAME; 經過檢查確定發現AUD_TBS確定已經滿了。經詢問過DBA協助判斷確認需要增加新的 datafile ，因為一個datafile預設最大只能到32GB。
TABLESPACE_NAME Size(MB) Used(MB) Avail(MB ------------------------------ -------- -------- -------- AUD_TBS 32,768 32,740 28 TBS_1 258,048 160,335 97,713 TBS_2 25,600 24,241 1,359 事後我也發現可以從 dba_data_files 檢查 欄位: BLOCKS 與 MAXBLOCKS 值是否相等判斷 datafile 是否滿。</description>
    </item>
    
    <item>
      <title>git CLI</title>
      <link>http://pollochang.work/post/2024-02-28-git-cli/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-git-cli/</guid>
      <description>commit git commit -m &amp;#34;描述&amp;#34; add 新增要紀錄的檔案
git add . 切換分支 git checkout develop pull ❯ git pull hint: You have divergent branches and need to specify how to reconcile them. hint: You can do so by running one of the following commands sometime before hint: your next pull: hint: hint: git config pull.rebase false # merge hint: git config pull.rebase true # rebase hint: git config pull.ff only # fast-forward only hint: hint: You can replace &amp;#34;git config&amp;#34; with &amp;#34;git config --global&amp;#34; to set a default hint: preference for all repositories.</description>
    </item>
    
    <item>
      <title>html轉pdf-wkhtmltopdf</title>
      <link>http://pollochang.work/post/2024-02-28-html%E8%BD%89pdf/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-html%E8%BD%89pdf/</guid>
      <description>官方網站-wkhtmltopdf
安裝檔 wkhtmltox_0.12.6.1-2.bullseye_amd64.deb CLI wkhtmltopdf 附件二-OS-作業系統日誌-差異備份-20231026_tmp.html 附件二-OS-作業系統日誌-差異備份-20231026.pdf </description>
    </item>
    
    <item>
      <title>Linux 係統時間</title>
      <link>http://pollochang.work/post/2024-02-28-%E6%99%82%E9%96%93/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E6%99%82%E9%96%93/</guid>
      <description>sudo date -s &amp;#34;2022/05/05 18:44:15&amp;#34; 若要查詢硬體時鐘（RTC）的時間，可以使用 hwclock：
若要將係統時間寫入硬體時鐘，可以使用 -w 參數：
sudo hwclock -w 係統時區校正 先設定時區 sudo timedatectl set-timezone Asia/Taipei ╰─ timedatectl Local time: Wed 2022-05-04 16:21:52 CST Universal time: Wed 2022-05-04 08:21:52 UTC RTC time: Wed 2022-05-04 08:21:52 Time zone: Asia/Taipei (CST, +0800) System clock synchronized: yes NTP service: active RTC in local TZ: no 校時查詢 [aaa@test ~]$ ntpq -p remote refid st t when poll reach delay offset jitter ============================================================================== *172.</description>
    </item>
    
    <item>
      <title>Linux 壓縮相關</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%A3%93%E7%B8%AE%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%A3%93%E7%B8%AE%E7%9B%B8%E9%97%9C/</guid>
      <description>7z 安裝 sudo apt-get install p7zip-full p7zip-rar 解壓縮到指定輸出目錄 7z x &amp;#34;dir1.zip&amp;#34; -o &amp;#34;dir1&amp;#34; zip 安裝 apt install zip unzip 解壓縮到指定輸出目錄 unzip -q test.zip -d /tmp 參考資料 Linux 安裝 7zip</description>
    </item>
    
    <item>
      <title>Linux 字型安裝</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%AD%97%E5%9E%8B%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%AD%97%E5%9E%8B%E5%AE%89%E8%A3%9D/</guid>
      <description>019.字型安裝 apt 安裝 sudo apt install ttf-mscorefonts-installer sudo apt install ttf-wqy-microhei ttf-wqy-zenhei # 中文字型 cd ~/下載 sudo mkdir -p /usr/share/fonts/custom &amp;amp;&amp;amp;\ sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf &amp;amp;&amp;amp;\ sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf &amp;amp;&amp;amp;\ sudo wget -P /usr/share/fonts/custom https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf &amp;amp;&amp;amp;\ sudo fc-cache -v -f </description>
    </item>
    
    <item>
      <title>Linux 硬體檢測相關指令</title>
      <link>http://pollochang.work/post/2024-02-28-%E7%A1%AC%E9%AB%94%E6%AA%A2%E6%B8%AC%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E7%A1%AC%E9%AB%94%E6%AA%A2%E6%B8%AC%E7%9B%B8%E9%97%9C%E6%8C%87%E4%BB%A4/</guid>
      <description>檢查住機板型號 ❯ sudo dmidecode -t 2 # dmidecode 3.3 Getting SMBIOS data from sysfs. SMBIOS 3.0.0 present. Handle 0x0002, DMI type 2, 15 bytes Base Board Information Manufacturer: ASUSTeK COMPUTER INC. Product Name: PRIME B250M-K Version: Rev X.0x Serial Number: 161190432104045 Asset Tag: Default string Features: Board is a hosting board Board is replaceable Location In Chassis: Default string Chassis Handle: 0x0003 Type: Motherboard Contained Object Handles: 0 檢查USB 等設備 udevadm monitor KERNEL[3434.</description>
    </item>
    
    <item>
      <title>Linux 筆電常用命令</title>
      <link>http://pollochang.work/post/2024-02-28-%E7%AD%86%E9%9B%BB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E7%AD%86%E9%9B%BB%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>檢查電池容量 upower -i /org/freedesktop/UPower/devices/battery_BAT0 </description>
    </item>
    
    <item>
      <title>Linux 連接iPhone讀取照片</title>
      <link>http://pollochang.work/post/2024-02-28-%E9%80%A3%E6%8E%A5iphone%E8%AE%80%E5%8F%96%E7%85%A7%E7%89%87/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E9%80%A3%E6%8E%A5iphone%E8%AE%80%E5%8F%96%E7%85%A7%E7%89%87/</guid>
      <description>安裝 iFuse jameschang@debian:~$ sudo apt-get install ifuse Reading package lists... Done Building dependency tree... Done Reading state information... Done The following NEW packages will be installed: ifuse 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded. Need to get 15.7 kB of archives. After this operation, 48.1 kB of additional disk space will be used. Get:1 http://deb.debian.org/debian bullseye/main amd64 ifuse amd64 1.1.4~git20181007.3b00243-1 [15.7 kB] Fetched 15.7 kB in 2s (7,099 B/s) Selecting previously unselected package ifuse.</description>
    </item>
    
    <item>
      <title>linux與windows共享目錄 samba</title>
      <link>http://pollochang.work/post/2024-02-28-linux%E8%88%87windows%E5%85%B1%E4%BA%AB%E7%9B%AE%E9%8C%84/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-linux%E8%88%87windows%E5%85%B1%E4%BA%AB%E7%9B%AE%E9%8C%84/</guid>
      <description>安裝samba sudo apt install samba 設定共享目錄 sudo vim /etc/samba/smb.conf
[localgit] comment = dadatong path = /home/pollochang/data/localGit browsable = yes guest ok = no read only = no create mask = 0755 [software] comment = dadatong path = /home/pollochang/data/software browsable = yes guest ok = no read only = yes create mask = 0755 [data] comment = dadatong path = /home/jameschang/data browsable = yes guest ok = no read only = no create mask = 0755 [tes1] comment = tes1 path = /home/jc/tes1 browsable = yes guest ok = no read only = no workgroup = oinstall create mode = 0775 #從Client端建立檔案後，建立之檔案權限會設定為create mode的值 directory mode = 2770 #從Client端建立目錄後，建立之目錄權限會設定為directory mode的值 valid users = @oinstall #可登入SAMBA的帳號白名單列表，可直接指定帳號清單，或是以 @開頭表示可使用的群組，指定的user一定要是系統上存在的帳號，否則是無效的。如 root, @user 表示允許root帳號與 @user群組中的帳號使用 新增 samba 的使用者 pollochang@pollochang-GL72-7RDX:~$ sudo smbpasswd -a jameschang New SMB password: Retype new SMB password: Failed to add entry for user jameschang.</description>
    </item>
    
    <item>
      <title>sell 日誌 function</title>
      <link>http://pollochang.work/post/2024-02-28-shell%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-shell%E7%9B%B8%E9%97%9C/</guid>
      <description>日誌時間 #日誌名稱 log=&amp;#34;./log/checkWbsite.log&amp;#34; #操作日誌存放路徑 fsize=2000000 #如果日誌大小超過上限，則儲存舊日誌，重新生成日誌檔案 exec 2&amp;gt;&amp;gt;$log #如果執行過程中有錯誤資訊均輸出到日誌檔案中 #日誌函式 #引數 #引數一，級別，INFO ,WARN,ERROR #引數二，內容 #返回值 function zc_log(){ #判斷格式 if [ 2 -gt $# ] then echo &amp;#34;parameter not right in zc_log function&amp;#34; ; return ; fi if [ -e &amp;#34;$log&amp;#34; ] then touch $log fi #當前時間 local curtime; curtime=`date +%Y%m%d%H%M%S` #判斷檔案大小 local cursize ; cursize=`cat $log | wc -c` ; if [ $fsize -lt $cursize ] then mv $log $curtime&amp;#34;.out&amp;#34; touch $log ; fi #寫入檔案 echo &amp;#34;$curtime $*&amp;#34; &amp;gt;&amp;gt; $log; } </description>
    </item>
    
    <item>
      <title>在CLI 製作開機USB</title>
      <link>http://pollochang.work/post/2024-02-28-%E8%A3%BD%E4%BD%9C%E9%96%8B%E6%A9%9Fusb/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E8%A3%BD%E4%BD%9C%E9%96%8B%E6%A9%9Fusb/</guid>
      <description>最近再把我自己的另一台筆電重新安裝。趁重新安裝時，安裝Debian，因為我已經很習慣用這個作業系統工作了。安裝完成之後，發現原本抓的有臭蟲，所以就上網重新安裝一次。
之前製作USB開機碟都是在windows上，而在Linux上卻沒有用過，因此順便紀錄一下過程。
工具 unetbootin 原本我都是用Rufus，但是只有支援Windows。於是我找到Unetbootin這個懶人工具。
下載連結UNetbootin for Debian (64-bit) for Linux
安裝
suod apt install ./unetbootin_575-1_amd64.deb 需要root 執行 執行時記得需要用root權限執行，不然會讀不到USB隨身碟。
jameschang@JamesChangNB:~/下載$ xhost local:root non-network local connections being added to access control list jameschang@JamesChangNB:~/下載$ sudo QT_X11_NO_MITSHM=1 /usr/bin/unetbootin jameschang@JamesChangNB:df -Th /dev/sdb1 vfat 58G 2.9G 56G 5% /media/jameschang/D-LIVE 10_1 jameschang@JamesChangNB:~/下載$ sudo umount /dev/sdb1 jameschang@JamesChangNB:~/下載$ sudo mkfs.vfat /dev/sdb1 mkfs.fat 4.1 (2017-01-24)
jameschang@JamesChangNB:sudo dd if=/home/jameschang/debs/debian-10.10.0-amd64-netinst.iso of=/dev/sdb1
sudo cp /home/jameschang/debs/debian-10.10.0-amd64-netinst.iso /dev/sdb1
fdisk /dev/sdb1
mkfs.vfat -I /dev/sdb1
參考資料 UNetbootin for Debian (64-bit) for Linux</description>
    </item>
    
    <item>
      <title>安裝Docker</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9Ddocker/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9Ddocker/</guid>
      <description>OS: Debian 10 Debian 11
初次安裝先移除舊相關套件 sudo apt-get remove docker docker-engine docker.io containerd runc 安裝 加入 gpg sudo apt-get update sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg \ lsb-release curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \ &amp;#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \ $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null 安裝docker 引擎 sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io 將使用者加入docker群組 sudo usermod -aG docker [userName] 安裝docker-compose https://github.</description>
    </item>
    
    <item>
      <title>我的linux日常生活-6.安裝開發工具</title>
      <link>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9D%E9%96%8B%E7%99%BC%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E5%AE%89%E8%A3%9D%E9%96%8B%E7%99%BC%E5%B7%A5%E5%85%B7/</guid>
      <description>我的linux日常生活-6.安裝開發工具 tags: 我的linux日常生活 git 下面是git 安裝指令與設定方式
安裝
sudo apt install git 設定 git
git config --global user.name PolloChang git config --global user.email james89926282@gmail.com git config --global core.editor &amp;#34;vim&amp;#34; 產生金鑰並取得公鑰
ssh-keygen cat /home/jameschang/.ssh/id_rsa.pub 之後再把公鑰上傳到git sever 就可以了
檢查有成功
ssh -T git@github.com 遠端桌面軟體-Remmina Remmina 是我比較習慣的遠端桌面軟體，它可以支援ssh、sftp、RDP等，常用的遠端通訊定。
一般安裝Ubuntu 時，通常就已經內建了。
安裝指令如下：
sudo apt install remmina 系統監控工具-nmon nmon 是在終端機顯示的監控工具，可以即時監控系統的狀況，也可以長時間採集系統資訊。下面為安裝方法：
sudo apt install nmon 下面為即時監控的指令
nmon 文字編輯器-vim Debian、Ubuntu 通常不自帶 vim 編輯器，所以需要特別安裝。
sudo apt install vim 流程圖與雛型工具-draw.io DrowIO 是我比較常用來繪製流程圖與雛型，雖然它可以直接在瀏覽器直接繪畫，但是先決條件網路品質必須要很好，像我在家如果需要加班（好命苦）時，手機網路有時候會收不到訊號，所以必須獨立安裝軟體。</description>
    </item>
    
    <item>
      <title>筆記型電腦安裝 Debian 調整</title>
      <link>http://pollochang.work/post/2024-02-28-gmone-%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-gmone-%E7%9B%B8%E9%97%9C/</guid>
      <description>筆記型電腦 調整 筆記型電腦插入滑鼠裝置自動關閉滑鼠板 Gnome gsettings set org.gnome.desktop.peripherals.touchpad send-events disabled-on-external-mouse 我發現在 Debian 10 (Gnome3.30.2) 不會正常作用 電源管理 tlp sudo apt install tlp tlp-rdw sudo tlp start sudo tlp-stat -s sudo systemctl enable tlp 參考資料 GNOME: How To Disable The Touchpad When A Mouse Is Plugged In And While Typing</description>
    </item>
    
    <item>
      <title>輸入法相關</title>
      <link>http://pollochang.work/post/2024-02-28-%E8%BC%B8%E5%85%A5%E6%B3%95%E7%9B%B8%E9%97%9C/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E8%BC%B8%E5%85%A5%E6%B3%95%E7%9B%B8%E9%97%9C/</guid>
      <description>設定中文輸入法 在windows時我習慣是使用微軟新注音輸入法，轉到Linux 的替代方案是新酷音。以下是我安裝新酷音的步驟。
至於輸入法框架，因為是使用 Gnome 桌面系統，在試過 fcitx 與 ibus 之後，最後是 ibus 比較能再大多數軟體上正常運作。fcitx 在有些時候會出現閃退或無法輸入中文字的狀況，至於是什麼原因就沒有仔細探究。
設定中文語系 sudo apt install locales-all sudo dpkg-reconfigure locales 選擇語系編碼 選擇主要語系 這邊我習慣選擇 en_US.UTF8，讓系統介面顯示英文為主。
選擇完之後系統就會自動開始設定。 ❯ sudo dpkg-reconfigure locales Generating locales (this might take a while)... en_US.UTF-8... done zh_TW.BIG5... done zh_TW.EUC-TW... done zh_TW.UTF-8... done Generation complete. 安裝新酷音 sudo apt install ibus-chewing chewing-editor 新酷音字詞編輯工具 sudo apt install chewing-editor liber-office 中文介面 sudo apt install libreoffice-l10n-zh-tw 下載新酷音詞庫 這邊我直接分享給大家我的檔案吧，這是我平時會使用的詞彙。
匯入新酷音詞庫 開啟剛剛安裝的 chewing-editor 按下匯入就可以了。</description>
    </item>
    
    <item>
      <title>關閉IPv6</title>
      <link>http://pollochang.work/post/2024-02-28-%E9%97%9C%E9%96%89ipv6/</link>
      <pubDate>Wed, 28 Feb 2024 19:20:17 +0800</pubDate>
      
      <guid>http://pollochang.work/post/2024-02-28-%E9%97%9C%E9%96%89ipv6/</guid>
      <description> /etc/sysctl.conf net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 net.ipv6.conf.lo.disable_ipv6 = 1 sudo sysctl -p ip a | grep inet6 參考資料 關閉 Ubuntu 的 Ipv6 </description>
    </item>
    
    <item>
      <title>GC實驗: String 相接 與 系統效能 關係</title>
      <link>http://pollochang.work/worknot/worknot-20230414/</link>
      <pubDate>Fri, 14 Apr 2023 20:53:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20230414/</guid>
      <description>做這個實驗只是想要說服同事，系統中有出現大量的字串相接，會讓系統效能變差。可以透過 StringBuffer 優化。
實驗目的 了解String 相接 與 系統效能 關係
實踐環境 java version: java 6 實驗環境 -Xms30M -Xmx30M -Xmn10M -Xss256k -XX:MaxPermSize=2m -XX:+UseConcMarkSweepGC -XX:CMSFullGCsBeforeCompaction=5 -XX:+CMSScavengeBeforeRemark -XX:+ScavengeBeforeFullGC -XX:MaxTenuringThreshold=30 -XX:+UseCMSCompactAtFullCollection -XX:CMSInitiatingOccupancyFraction=80 -XX:+UseCMSInitiatingOccupancyOnly -XX:+CMSParallelRemarkEnabled -Xloggc:/home/jameschang/test-gc.log -XX:+DisableExplicitGC -verbose:gc -server 實驗項目 實驗項目: 單純 String 接拼 實驗程式碼 public class TestString{ public static void main(String[] args){ String test = &amp;#34;&amp;#34;; for(int i = 0; i &amp;lt;- 50000; i++&amp;gt;){ test += &amp;#34;1234&amp;#34;+&amp;#34;5678&amp;#34;; } } } 實驗項目: StringBuffer 接字串 實驗程式碼 public class TestString{ public static void main(String[] args){ StringBuffer test = new StringBuffer(); for(int i = 0; i &amp;lt;- 50000; i++&amp;gt;){ test.</description>
    </item>
    
  </channel>
</rss>
