<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Worknots on PolloChang 工作筆記</title>
    <link>http://pollochang.work/worknot/</link>
    <description>Recent content in Worknots on PolloChang 工作筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Fri, 12 Jul 2024 00:20:30 +0800</lastBuildDate><atom:link href="http://pollochang.work/worknot/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DB2 Audit Rc Table</title>
      <link>http://pollochang.work/worknot/db2-audit-rc-table/</link>
      <pubDate>Fri, 12 Jul 2024 00:20:30 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/db2-audit-rc-table/</guid>
      <description>db2diag -l Warning | db2diag -g &amp;#34;comp^=bsu security&amp;#34; DB2 稽核 失敗 rc 對照表 # rc Corresponding SQL30082N rc Explanation 1 -2146500508 1 Password has expired 2 -2146500507 2 The password is not valid for the specified user id 3 -2146500290 3 Password missing 4 -2146500504 15, 24, 26, 36 Password length is greater than the supported password length 5 -2146500289 5 User ID missing 6 -2146500502 6 Bad User 7 -2146500316 7 User ID is revoked 8 -2146500483 19 User ID suspended 9 -2146500315 24 Invalid User ID or password 10 -2146500271 4 Security protocol violation 11 -2146499492 15, 24 Encryption types do not match 12 -2146500270 17 Authentication types do not match 13 -2146500288 17 Unsupported function 14 -2146500301 20 Mutual authentication failed 15 -2146499529 41 A trusted connection was not established, so switch user request is invalid 16 -2146499506 42 Root capability required 17 -2146500252 N/A The specified node or server is not available 18 -2146500307 N/A Unable to authenticate because of system error 19 -2146500234 25 The security plugin has disallowed the connection 20 -2146500233 26 The server security plugin encountered an unexpected error 21 -2146500232 27 The server security plugin encountered an invalid server credential 22 -2146500231 28 The server security plugin encountered an expired server credential 23 -2146500230 29 The server security plugin encountered an invalid security token sent by the client 24 -2146500229 30 The client security plugin is missing a required API 25 -2146500228 31 The client security plugin is of the wrong plugin type 26 -2146500227 32 The client security plugin does not have a matching GSS-API security plugin available for connection to the database 27 -2146500226 33 The client security plugin cannot be loaded 28 -2146500225 34 The client security plugin name is invalid 29 -2146500224 35 The client security plugin reports an API version that is incompatible with DB2 30 -2146500223 36 The client security plugin encountered an unexpected error 31 -2146500222 37 The server security plugin encountered an invalid principal name 32 -2146500221 38 The client security plugin encountered an invalid client credential 33 -2146500220 39 The client security plugin encountered an expired client credential 34 -2146500219 40 The client security plugin encountered an invalid security token sent by the server 參考資料 Password Validation Messages in db2diag.</description>
    </item>
    
    <item>
      <title>故障排除: Linux 連接 windows AD</title>
      <link>http://pollochang.work/worknot/troubleshooting-linux-connection-to-windows-ad/</link>
      <pubDate>Mon, 08 Jul 2024 22:20:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/troubleshooting-linux-connection-to-windows-ad/</guid>
      <description>環境 AD server: windows server 2022 Client server: Oracle Linux 9
症狀: 無法抓取 AD 新資訊 [root@client-server ~]# id testacconut id: ‘testacconut’: no such user 問題排除步驟 # 退出當前 AD 領域。 realm leave # 停止 sssd 服務。 systemctl stop sssd # 確保舊的 AD 資料被清除。 sudo rm -rf /var/lib/sss/db/* sudo rm -rf /var/lib/sss/mc/* sudo rm -rf /var/lib/sss/secrets/* sudo rm -rf /var/lib/sss/pipes/* sudo rm -rf /var/lib/sss/gpo_cache/* sudo rm -rf /var/cache/realmd/* # 重新加入新的 AD 領域。 realm join --user=adManager ad.</description>
    </item>
    
    <item>
      <title>Ollama Install in Debain12</title>
      <link>http://pollochang.work/worknot/ollama-install-in-debain12/</link>
      <pubDate>Sat, 06 Jul 2024 21:35:16 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/ollama-install-in-debain12/</guid>
      <description>安裝環境 OS: Debian 12 RAM: 64G CPU: 11th Gen Intel(R) Core(TM) i5-1145G7 @ 2.60GHz 安裝方法 MacOS Download Ollama
Debian 12 sudo apt install -y build-essential libssl-dev libffi-dev python3-dev curl -fsSL https://ollama.com/install.sh | sh ❯ curl -fsSL https://ollama.com/install.sh | sh &amp;gt;&amp;gt;&amp;gt; Downloading ollama... ######################################################################## 100.0%##O=# # &amp;gt;&amp;gt;&amp;gt; Installing ollama to /usr/local/bin... &amp;gt;&amp;gt;&amp;gt; Creating ollama user... &amp;gt;&amp;gt;&amp;gt; Adding ollama user to render group... &amp;gt;&amp;gt;&amp;gt; Adding ollama user to video group... &amp;gt;&amp;gt;&amp;gt; Adding current user to ollama group.</description>
    </item>
    
    <item>
      <title>Linux Iconv</title>
      <link>http://pollochang.work/worknot/linux-iconv/</link>
      <pubDate>Fri, 05 Jul 2024 14:16:50 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/linux-iconv/</guid>
      <description>Linux 轉碼工具
# 查詢檔案編碼 file -i source-file.sql # 執行轉碼 iconv -f utf-16le -t UTF-8 source-file.sql -o gole-file.sql </description>
    </item>
    
    <item>
      <title>在 Linux 中，su account 和 su - account 有以下主要差別</title>
      <link>http://pollochang.work/worknot/worknot-20240704-1/</link>
      <pubDate>Thu, 04 Jul 2024 18:18:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240704-1/</guid>
      <description>su account 保持當前環境：su account 切換到 account 用戶時，會保留當前用戶的環境變量和當前目錄。 不會加載 account 用戶的環境配置：這意味著 account 用戶的 .bash_profile 或 .profile 等配置文件不會被執行。 當前目錄不變：切換到 account 用戶後，會保持在切換前的目錄。 su - account 模擬完整登錄：su - account 切換到 account 用戶時，會模擬完整的登錄過程，就像 account 用戶剛剛通過 SSH 或登入界面登錄一樣。 加載 account 用戶的環境配置：account 用戶的 .bash_profile 或 .profile 等配置文件會被執行，設置該用戶的環境變量。 切換到用戶的主目錄：切換到 account 用戶後，會自動進入該用戶的主目錄（通常是 /home/account）。 </description>
    </item>
    
    <item>
      <title>Oracle Clusterware 初學</title>
      <link>http://pollochang.work/worknot/oracle-clusterware-1/</link>
      <pubDate>Wed, 03 Jul 2024 23:57:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/oracle-clusterware-1/</guid>
      <description>指令 crsctl status res -t crsctl status res -t 功能: 顯示集群資源的狀態，以表格形式展示各資源的詳細信息。 參數: -t 是 &amp;ndash;terse 的縮寫，表示以簡潔的表格格式輸出信息。 示例 NAME TARGET STATE SERVER STATE_DETAIL -------------------------------------------------------------- ora.net1.network ONLINE ONLINE node1, node2 ONLINE ora.asm ONLINE ONLINE node1 ONLINE ora.db ONLINE ONLINE node1 ONLINE ora.listener ONLINE ONLINE node1, node2 ONLINE 示例解釋 ora.diskgroup1: 這是一個磁碟組資源，當前狀態是 ONLINE。 ora.db1: 這是資料庫資源，當前狀態是 ONLINE。 ora.listener1: 這是資料庫監聽器資源，當前狀態是 ONLINE。 主要字段解釋 NAME: 資源的名稱。 TARGET: 設定的目標狀態。 STATE: 當前狀態。 SERVER: 資源所在的節點。 STATE_DETAIL: 其他詳細狀態信息。 常見用途 檢查資源狀態: 確認集群中各個資源的運行狀態。 故障排查: 用於排查集群問題，了解哪些資源可能存在問題。 監控集群健康: 確保所有必要的資源都在正常運行。 檢查資源詳細信息: crsctl status res &amp;lt;resource_name&amp;gt; -details 查看集群狀態: crsctl check cluster 查看節點狀態: crsctl status resource -t 參考資料 1 Introduction to Oracle Clusterware </description>
    </item>
    
    <item>
      <title>Oracle OCFS2 初學</title>
      <link>http://pollochang.work/worknot/oracle-ocfs2-1/</link>
      <pubDate>Wed, 03 Jul 2024 23:50:53 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/oracle-ocfs2-1/</guid>
      <description>Oracle Cluster File System 2 (OCFS2) 文件系统
指令 手動掛載 mount -t ocfs2 /dev/xvdb1 /data 處理結果
[root@testAP ~]# df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/ol-root 291G 189G 103G 65% / /dev/xvda1 497M 267M 230M 54% /boot [root@testAP ~]# mount -t ocfs2 /dev/xvdb1 /data [root@testAP ~]# df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/ol-root 291G 189G 103G 65% / /dev/xvda1 497M 267M 230M 54% /boot /dev/xvdb1 1.0T 896G 129G 88% /data 開機時自動掛載 /etc/fstab /dev/xvdb1 /data ocfs2 defaults,_netdev 0 0 </description>
    </item>
    
    <item>
      <title>Linux Grub2 Set Default(手動設定開機時要啟動的 linux 核心)</title>
      <link>http://pollochang.work/worknot/linux-grub2-set-default/</link>
      <pubDate>Wed, 03 Jul 2024 23:43:33 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/linux-grub2-set-default/</guid>
      <description>手動設定開機時要啟動的 linux 核心
操作步驟
查看目前已經有安哪些核心 選擇核心 重新生成GRUB配置 重新開機 檢查 # 1. 查看目前已經有安哪些核心 grep ^menuentry /boot/grub2/grub.cfg # 2. 選擇核心 grub2-set-default 0 # 3. 重新生成GRUB配置 grub2-mkconfig -o /boot/grub2/grub.cfg # 4. 重新開機 reboot # 5. 檢查 uname -a 處理結果
[root@test-os yum.repos.d]# grep ^menuentry /boot/grub2/grub.cfg menuentry &amp;#39;Oracle Linux Server 7.9, with Unbreakable Enterprise Kernel 4.14.35-2047.537.4.el7uek.x86_64&amp;#39; --class oracle --class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option &amp;#39;gnulinux-4.14.35-2047.537.4.el7uek.x86_64-advanced-cf7b3276-fddb-46de-917a-bbb2ca596c54&amp;#39; { menuentry &amp;#39;Oracle Linux Server 7.9, with Unbreakable Enterprise Kernel 4.</description>
    </item>
    
    <item>
      <title>設定 Linux 檔案瀏覽器 Files 預設的 Columns</title>
      <link>http://pollochang.work/worknot/worknot-20240701-1/</link>
      <pubDate>Mon, 01 Jul 2024 09:48:08 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240701-1/</guid>
      <description> 使用以下命令來查看當前設置： gsettings get org.gnome.nautilus.list-view default-visible-columns 設置你想要的欄位，例如： gsettings set org.gnome.nautilus.list-view default-visible-columns &amp;#34;[&amp;#39;name&amp;#39;, &amp;#39;size&amp;#39;, &amp;#39;type&amp;#39;, &amp;#39;date_modified&amp;#39;]&amp;#34; default-visible-columns values
name: 檔案或目錄的名稱 size: 檔案的大小 type: 檔案的類型 date_modified: 檔案的修改日期 date_accessed: 檔案的訪問日期 owner: 檔案的所有者 group: 檔案的群組 permissions: 檔案的權限 detailed_type: 檔案的詳細類型（例如“MPEG-4 影片”、“PNG 圖片”） </description>
    </item>
    
    <item>
      <title>Docker Network 網路問題排除</title>
      <link>http://pollochang.work/worknot/docker-network-issue-1/</link>
      <pubDate>Sun, 30 Jun 2024 08:28:26 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/docker-network-issue-1/</guid>
      <description>狀況 從 docker 內部無法連接外網，但是主機可以。例如
[root@test-vm oraGtw4db2]# docker exec -it oragtw4db2 bash [root@text-docker /]# ping 8.8.8.8 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. ^C --- 8.8.8.8 ping statistics --- 6 packets transmitted, 0 received, 100% packet loss, time 5119ms 檢查步驟 從 docker 內部 ping 外網，例如: ping 8.8.8.8 從 主機 內部 ping 外網，例如: ping 8.8.8.8 檢查 docker 啟動時有錯誤訊息，指令: journalctl -u docker.service 錯誤訊息處理 bridge-nf-call-iptables is disabled level=warning msg=&amp;ldquo;WARNING: bridge-nf-call-iptables is disabled&amp;rdquo; level=warning msg=&amp;ldquo;WARNING: bridge-nf-call-ip6tables is disabled&amp;rdquo; 啟用 br_netfilter</description>
    </item>
    
    <item>
      <title>Restoring DB2 Database</title>
      <link>http://pollochang.work/worknot/restoring-db2-database/</link>
      <pubDate>Wed, 26 Jun 2024 09:35:42 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/restoring-db2-database/</guid>
      <description>還原 Online Backup db2 terminate db2 deactivate db TEMADB db2 restore database TEMADB from &amp;lt;location&amp;gt; taken at &amp;lt;timestamp&amp;gt; replace existing db2 rollforward database TEMADB to end of logs and stop overflow log path (/var/archive_logs) db2 activate db TEMADB 參考資料 Restoring the DB2® database </description>
    </item>
    
    <item>
      <title>linux last 指令</title>
      <link>http://pollochang.work/worknot/worknot-20240625-1/</link>
      <pubDate>Tue, 25 Jun 2024 12:24:41 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240625-1/</guid>
      <description>統計每個 IP 地址的出現次數 last | awk &amp;#39;{print $3}&amp;#39; | grep -Eo &amp;#39;([0-9]{1,3}\.){3}[0-9]{1,3}&amp;#39; | sort | uniq -c | sort -nr last： 顯示用戶登錄的歷史記錄。 awk &amp;lsquo;{print $3}&amp;rsquo;： 提取輸出的第三列，通常是 IP 地址或主機名。 grep -Eo &amp;lsquo;([0-9]{1,3}.){3}[0-9]{1,3}&amp;rsquo;： 使用正則表達式過濾出有效的 IP 地址。 sort： 將結果排序，這一步是 uniq -c 正常工作的前提。 uniq -c： 統計每個唯一 IP 地址的出現次數。 sort -nr：按數量從大到小排序。 </description>
    </item>
    
    <item>
      <title>Linux 硬體檢視</title>
      <link>http://pollochang.work/worknot/linux-hardware-view/</link>
      <pubDate>Tue, 18 Jun 2024 00:25:07 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/linux-hardware-view/</guid>
      <description>使用 lshw 工具 安裝 Debian sudo apt install lshw 檢測 CPU ❯ sudo lshw -short -class bus -class cpu H/W path Device Class Description ========================================================= /0 bus 01M3M4 /0/400 processor 11th Gen Intel(R) Core(TM) i5-1145G7 @ 2.60GHz /0/100/d bus Tiger Lake-LP Thunderbolt 4 USB Controller /0/100/d/0 usb1 bus xHCI Host Controller /0/100/d/1 usb2 bus xHCI Host Controller /0/100/d.2 bus Tiger Lake-LP Thunderbolt 4 NHI #0 /0/100/14 bus Tiger Lake-LP USB 3.</description>
    </item>
    
    <item>
      <title>Update Nvidia 470 Dirver</title>
      <link>http://pollochang.work/worknot/update-nvidia-470-dirver/</link>
      <pubDate>Tue, 11 Jun 2024 22:29:27 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/update-nvidia-470-dirver/</guid>
      <description>環境 OS: Debian 11 GPU: Nvidia 410 執行步驟 安裝 linux-headers 及必要套件 sudo apt -y install linux-headers-$(uname -r) build-essential libglvnd-dev pkg-config 移除不必要套件 下載最新 Nvidia driver 到以下網址下載最新的驅動程式
https://www.nvidia.com/zh-tw/geforce/drivers/
wget https://tw.download.nvidia.com/XFree86/Linux-x86_64/470.256.02/NVIDIA-Linux-x86_64-470.256.02.run 更新 sudo bash ./NVIDIA-Linux-x86_64-470.256.02.run </description>
    </item>
    
    <item>
      <title>修補 CVE-2023-48795</title>
      <link>http://pollochang.work/worknot/fix-cve-2023-48795/</link>
      <pubDate>Thu, 06 Jun 2024 23:20:15 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/fix-cve-2023-48795/</guid>
      <description>修補 CVE-2023-48795 方式
系統環境 OS: Rocky Linux 8 檢測方式 使用有風險的加密方式登入，無法登入則驗證通過
ssh -oCiphers=chacha20-poly1305@openssh.com,3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc pollochang@192.168.122.81 出現下列訊息算完成修補
Unable to negotiate with 192.168.122.81 port 22: no matching cipher found. Their offer: aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr 修補方式 更新文件: /etc/sysconfig/sshd 將 #CRYPTO_POLICY= 取消註解，結果如下
CRYPTO_POLICY= 更新文件: /etc/ssh/sshd_config 新增限制加密演算法
KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256 Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com 檢查設定正確 sudo sshd -t 重啟 sshd 服務 sudo systemctl restart sshd 參考資料 How to disable vulnerable ciphers and encryption modes in Rocky Linux 8 to mitigate Terrapin Attack (CVE-2023-48795) </description>
    </item>
    
    <item>
      <title>putty 編譯安裝</title>
      <link>http://pollochang.work/worknot/worknot-20240605-1/</link>
      <pubDate>Wed, 05 Jun 2024 22:52:47 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240605-1/</guid>
      <description>編譯安裝 下載 putty wget https://the.earth.li/~sgtatham/putty/latest/putty-0.81.tar.gz tar -zxf putty-0.81.tar.gz cd putty-0.81 建立 catch cmake . ❯ cmake . -- The C compiler identification is GNU 12.2.0 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /usr/bin/cc - skipped -- Detecting C compile features -- Detecting C compile features - done -- Found Git: /usr/bin/git (found version &amp;#34;2.39.2&amp;#34;) -- Looking for sys/auxv.</description>
    </item>
    
    <item>
      <title>Linux Cli Netstat</title>
      <link>http://pollochang.work/worknot/linux-cli-netstat/</link>
      <pubDate>Mon, 03 Jun 2024 12:29:55 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/linux-cli-netstat/</guid>
      <description>線上手冊內容 NETSTAT(8)	Linux System Administrator&amp;#39;s Manual	NETSTAT(8) NAME netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships SYNOPSIS netstat	[address_family_options] [--tcp|-t] [--udp|-u] [--udplite|-U] [--sctp|-S] [--raw|-w] [--l2cap|-2]	[--rfcomm|-f]	[--listening|-l] [--all|-a] [--numeric|-n] [--numeric-hosts] [--nu‐ meric-ports] [--numeric-users] [--symbolic|-N] [--extend|-e[--extend|-e]] [--timers|-o] [--program|-p] [--verbose|-v] [--continuous|-c] [--wide|-W] netstat {--route|-r} [address_family_options] [--extend|-e[--extend|-e]] [--verbose|-v] [--numeric|-n] [--numeric-hosts] [--numeric-ports] [--numeric-users] [--continuous|-c] netstat {--interfaces|-i} [--all|-a] [--extend|-e[--extend|-e]] [--verbose|-v] [--program|-p] [--numeric|-n] [--numeric-hosts] [--numeric-ports] [--numeric-users] [--continuous|-c] netstat {--groups|-g} [--numeric|-n] [--numeric-hosts] [--numeric-ports] [--numeric-users] [--continuous|-c] netstat {--masquerade|-M} [--extend|-e] [--numeric|-n] [--numeric-hosts] [--numeric-ports] [--numeric-users] [--continuous|-c] netstat {--statistics|-s} [--tcp|-t] [--udp|-u] [--udplite|-U] [--sctp|-S] [--raw|-w] netstat {--version|-V} netstat {--help|-h} address_family_options: [-4|--inet] [-6|--inet6] [--protocol={inet,inet6,unix,ipx,ax25,netrom,ddp,bluetooth, .</description>
    </item>
    
    <item>
      <title>nginx ssl 設定步驟</title>
      <link>http://pollochang.work/worknot/worknot-20240529-1/</link>
      <pubDate>Wed, 29 May 2024 21:27:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240529-1/</guid>
      <description>檢查本機的OpenSSL支援加密協定 openssl ciphers -v | grep TLS ❯ openssl ciphers -v | grep TLS TLS_AES_256_GCM_SHA384 TLSv1.3 Kx=any Au=any Enc=AESGCM(256) Mac=AEAD TLS_CHACHA20_POLY1305_SHA256 TLSv1.3 Kx=any Au=any Enc=CHACHA20/POLY1305(256) Mac=AEAD TLS_AES_128_GCM_SHA256 TLSv1.3 Kx=any Au=any Enc=AESGCM(128) Mac=AEAD ECDHE-ECDSA-AES256-GCM-SHA384 TLSv1.2 Kx=ECDH Au=ECDSA Enc=AESGCM(256) Mac=AEAD ECDHE-RSA-AES256-GCM-SHA384 TLSv1.2 Kx=ECDH Au=RSA Enc=AESGCM(256) Mac=AEAD DHE-RSA-AES256-GCM-SHA384 TLSv1.2 Kx=DH Au=RSA Enc=AESGCM(256) Mac=AEAD ECDHE-ECDSA-CHACHA20-POLY1305 TLSv1.2 Kx=ECDH Au=ECDSA Enc=CHACHA20/POLY1305(256) Mac=AEAD ECDHE-RSA-CHACHA20-POLY1305 TLSv1.2 Kx=ECDH Au=RSA Enc=CHACHA20/POLY1305(256) Mac=AEAD DHE-RSA-CHACHA20-POLY1305 TLSv1.2 Kx=DH Au=RSA Enc=CHACHA20/POLY1305(256) Mac=AEAD ECDHE-ECDSA-AES128-GCM-SHA256 TLSv1.</description>
    </item>
    
    <item>
      <title>linux CLI rsync</title>
      <link>http://pollochang.work/worknot/worknot-20240518-1/</link>
      <pubDate>Sat, 18 May 2024 00:08:34 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240518-1/</guid>
      <description>中斷續傳 rsync -P --rsh=ssh jameschang@[IP]:[source-path] [gold-path] -P 顯示進度</description>
    </item>
    
    <item>
      <title>DB2 維護相關 SQL</title>
      <link>http://pollochang.work/worknot/worknot-20240513-1/</link>
      <pubDate>Mon, 13 May 2024 16:28:38 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240513-1/</guid>
      <description>查詢目前資料庫哪些帳號 SELECT * FROM SYSIBM.SYSDBAUTH GRANTOR |GRANTEE |DBADMAUTH|CREATETABAUTH|BINDADDAUTH|CONNECTAUTH|NOFENCEAUTH|GRANTEETYPE|IMPLSCHEMAAUTH|LOADAUTH|EXTERNALROUTINEAUTH|QUIESCECONNECTAUTH|SECURITYADMAUTH|LIBRARYADMAUTH|GRANTORTYPE|GRANTEEROLEID|GRANTORROLEID|SQLADMAUTH|WLMADMAUTH|EXPLAINAUTH|DATAACCESSAUTH|ACCESSCTRLAUTH| -------+--------+---------+-------------+-----------+-----------+-----------+-----------+--------------+--------+-------------------+------------------+---------------+--------------+-----------+-------------+-------------+----------+----------+-----------+--------------+--------------+ SYSIBM |DB2INST1|Y |N |N |N |N |U |N |N |N |N |Y |N |S | | |N |N |N |Y |Y | SYSIBM |PUBLIC |N |Y |Y |Y |N |G |Y |N |N |N |N |N |S | | |N |N |N |N |N | DB2INST1|USER1 |Y |Y |Y |Y |Y |U |Y |Y |Y |Y |Y |N |U | | |Y |Y |N |Y |Y | </description>
    </item>
    
    <item>
      <title>網頁連線問題</title>
      <link>http://pollochang.work/worknot/worknot-20240507-2/</link>
      <pubDate>Tue, 07 May 2024 14:44:31 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240507-2/</guid>
      <description>問題 You cannot visit domain.example.com right now because the website uses HSTS.
說明 該網站啟用了 HSTS（HTTP Strict Transport Security）功能，這意味著您的瀏覽器記住了您僅能使用安全的 HTTPS 連接方式訪問該網站，以增強安全性。這可以防止您的瀏覽器通過不安全的 HTTP 連接訪問該網站。
可能的狀況 憑證過期 ❯ curl -v -k https://volunteer.ntpc.gov.tw 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; * Connected to volunteer.ntpc.gov.tw (61.60.98.240) port 443 (#0) * subject: C=TW; L=\Uxxxx\Uxxxx\Uxxxx; O=\Uxxxx\Uxxxx\Uxxxx; OU=\Uxxxx\Uxxxx\Uxxxx; OU=\Uxxxx\Uxxxx\Uxxxx\Uxxxx; CN=domain.example.com; serialNumber=0000000010045160 * expire date: Aug 8 00:00:00 2020 GMT </description>
    </item>
    
    <item>
      <title>職涯七年心路歷程</title>
      <link>http://pollochang.work/worknot/worknot-20240507-1/</link>
      <pubDate>Tue, 07 May 2024 00:11:13 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240507-1/</guid>
      <description>這幾個月左思右想，這幾年的工作中發現做有些事情可以讓任務執行的更順暢。
凡事先規劃並將規劃轉寫成文件。 每天列舉出要做的事項。 完成工作後，撰寫一份簡單的結案文件。 這三件事情我覺的重點在於「紀錄文件」這件事。畢竟身為人畢竟識健忘的，即使是一個團體內部可以互向提醒，但是集體忽略或是忘記某件事仍然會出現。所以將每項任務或是事情落實成文件是一件很重要的事情。重點有這些文件，隨時都可以有一個交接的起步。
但是文件一多，就會越難進行尋找。但是拜硬碟科技所賜，現在電腦中的硬碟大多已經是固態硬碟(SSD)了，要針對幾千個純文字檔進行全文搜索往往也只需要幾秒鐘的時間。
以我的習管為例，我習慣使用 Markdown 語法作為筆記格式，一方面可以很直覺呈現一篇筆記的章節內容，另一方面也有合適的工具針對程式語法提供高亮度顯示，通常 vsCode 就可以達到輕鬆閱讀的需求了。另外 Markdown 還可以傳化成 html、PDF 等其他文件格式。重點是筆記一多也不怕在茫茫筆記海中搜尋困難。因為純文字在現在的搜尋工具可以很輕鬆的找到。在 UI 界面中，目前仍然是以 vsCode 最方便，接下來是 linux find + grep 指令 也可以輕鬆尋找，如下：
find &amp;#34;/home/jameschang/Documents/ntoes/&amp;#34; -name &amp;#34;*.md&amp;#34; -type f -exec grep -l -H &amp;#34;關鍵字&amp;#34; {} \; 好啦，因為最近工作上真的遇到瓶頸，所以有一點體悟到這四年的工作筆記沒有白費。</description>
    </item>
    
    <item>
      <title>jenkins 安裝</title>
      <link>http://pollochang.work/worknot/worknot-20240505-2/</link>
      <pubDate>Sun, 05 May 2024 12:03:56 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240505-2/</guid>
      <description>環境 OS: Debian 12 jenkins version: 2.440.3 jre: adoptium jre 17 安裝 安裝必要package sudo apt install -y fontconfig 部屬 tomcat 安裝 jre 從 adoptium 官方網站下載 java 17 安裝 jre sudo mkdir -p /usr/local/lib/jvm sudo tar -zxf ~/OpenJDK17U-jre_x64_linux_hotspot_17.0.11_9.tar.gz -C /usr/local/lib/jvm sudo ln -s /usr/local/lib/jvm/jdk-17.0.11+9-jre /usr/local/lib/jvm/jre-17-latest 安裝 tomcat 設定使用者 sudo useradd -r tomcat -s /sbin/nologin 設定目錄 sudo mkdir -p /var/tomcat/dump sudo mkdir -p /usr/local/share/apache-tomcat/ sudo mkdir -p /var/log/tomcat/jenkins sudo mkdir -p /usr/local/etc/catalina/jenkins/ sudo mkdir -p /home/tomcat sudo -u tomcat mkdir -p /usr/local/etc/catalina/jenkins/{webapps,temp,work} sudo chown -R tomcat: /var/log/tomcat sudo chown -R tomcat: /usr/local/share/apache-tomcat sudo chown -R root: /usr/local/share/apache-tomcat/apache-tomcat-9-latest/logs sudo chown -R tomcat: /usr/local/etc/catalina sudo chown -R tomcat: /var/tomcat/dump sudo chown -R tomcat: /home/tomcat 下載 tomcat 並安裝 wget https://archive.</description>
    </item>
    
    <item>
      <title>Jenkins 客製化UI</title>
      <link>http://pollochang.work/worknot/worknot-20240505-1/</link>
      <pubDate>Sun, 05 May 2024 11:34:09 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240505-1/</guid>
      <description>環境 jenkins version: 2.440.3 Login Theme 客製化登入頁面
安裝 Plugin Login Theme: https://plugins.jenkins.io/login-theme/ 設定 Plugin 設定位置: manage/appearance/Appearance
Login Page Theme header 可以設定登入的歡迎語
&amp;lt;h3&amp;gt;Welcome to PolloChang&amp;#39;s Jenkins!&amp;lt;/h3&amp;gt; Branding 設定 logo
https://pollochang.work/images/logo.jpg Custom CSS position: absolute; inset: 0; z-index: 1; background: linear-gradient( 135deg, rgb(69, 123, 157) 10%, rgb(188, 187, 206) 30%, rgb(235, 176, 163) 50%, rgb(244, 213, 177) 70%, rgb(139, 185, 198) 90%, rgb(44, 113, 149) 110% ); 設定過程中記得不要登出檢查，要開無痕檢查，不然設定錯誤會無法登入。
Customizable Header 客製化 Header</description>
    </item>
    
    <item>
      <title>GlassFish 2.1.1.1 CLI 說明文件</title>
      <link>http://pollochang.work/worknot/worknot-20240430-1/</link>
      <pubDate>Tue, 30 Apr 2024 18:21:25 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240430-1/</guid>
      <description>GlassFish 2.1.1.1 CLI 說明
最近在處理 GlassFish 2.1.1.1 的相關問題，發現裡面的說明有些難看，於是我稍微把裡面的說明文件整理了一下
asadmin&amp;gt; help NAME help - displays the asadmin utility commands SYNOPSIS help [command_name] command_name [--help | -?] DESCRIPTION The help command displays a list of all the asadmin utility commands. Specify the command to display the usage informa-tion for that command. To display the man page of each com-mand, use the syntax: asadmin command_name --help | -? or asadmin help command_name The following is a list of all the asadmin utility commands: add-resources registers the resource in the specified XML file apply-http-lb-changes applies load balancer configuration changes to the load balancer backup-domain performs a backup on the domain change-admin-password changes the administrator password change-master-password changes the master password clear-ha-store deletes tables in the HA database configure-ha-cluster configures an existing cluster to be High Availability configure-ha-persistence enables configuration of parameters related to session persistence configure-lb-weight sets load balancing weights for clustered instances configure-webservice-management sets the monitoring or maxhistory or attributes of a deployed webservice copy-config copies an existing configuration to create a new confi-guration create-admin-object adds the administered object with the specified JNDI name create-application-ref creates a reference to an application create-audit-module creates an audit module for the optional plugin module create-auth-realm adds the named authorized realm create-cluster creates a cluster create-connector-connection-pool adds a connection pool with the specified connection pool name create-connector-resource registers the resource with the specified JNDI name create-connector-security-map creates or modifies a security map for the named connec- tor connection pool create-converged-lb creates a converged load balancer.</description>
    </item>
    
    <item>
      <title>grails5 強制升級 plugin 相依</title>
      <link>http://pollochang.work/worknot/worknot-20240428-2/</link>
      <pubDate>Sun, 28 Apr 2024 12:14:15 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240428-2/</guid>
      <description>今天在為自己的專案做CVE 弱點掃描，解決過程中需要為專案進行 plugin 相依升級。在 build.gradle 設定如下
build.gradle configurations{ // 強制移除 implementation { exclude group: &amp;#39;com.h2database&amp;#39; //CVE-2022-45868,CVE-2022-23221,CVE-2021-42392 exclude group: &amp;#34;org.graalvm.sdk&amp;#34; exclude group: &amp;#34;com.bertramlabs.plugins:asset-pipeline-core&amp;#34; } // 強制升級 all{ resolutionStrategy.eachDependency { DependencyResolveDetails details -&amp;gt; ModuleVersionSelector requested = details.requested List forcePlugins = [ [group: &amp;#39;org.yaml&amp;#39;, name: &amp;#39;snakeyaml&amp;#39;, useVersion: &amp;#39;1.33&amp;#39;], ] forcePlugins.each {forcePlugin -&amp;gt; if (requested.group == forcePlugin.group &amp;amp;&amp;amp; requested.name == forcePlugin.name ) { details.useVersion forcePlugin.useVersion } } } } } </description>
    </item>
    
    <item>
      <title>dependency-check</title>
      <link>http://pollochang.work/worknot/worknot-20240428-1/</link>
      <pubDate>Sun, 28 Apr 2024 08:47:57 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240428-1/</guid>
      <description>下載
wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.1.0/dependency-check-9.1.0-release.zip sudo unzip -q dependency-check-9.1.0-release.zip -d /usr/local/share 執行 /usr/local/share/dependency-check/bin/dependency-check.sh -s ~/Documents/gitContent/pollochang/TWGBC/pollo-twgcb-web/build/libs/pollo-twgcb-web.war --format HTML -o ./ 參考資料 DependencyCheck </description>
    </item>
    
    <item>
      <title>hugo 筆記</title>
      <link>http://pollochang.work/worknot/worknot-20240427-1/</link>
      <pubDate>Sat, 27 Apr 2024 23:30:17 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240427-1/</guid>
      <description>hugo + gitHub 是我自己架設網站的工具，這邊我簡單紀錄一下常用的指令
新增文章 hugo new worknot/worknot-$(date &amp;#39;+%Y%m%d&amp;#39;).md 預覽文章，包含草稿 hugo server 預覽文章，包含草稿 hugo server -D 寫好的內容推送到網站 #!/bin/bash hugo git -C public add . git -C public commit -m &amp;#34;更新筆記&amp;#34; git -C public push </description>
    </item>
    
    <item>
      <title>一到指令刪除相關進程</title>
      <link>http://pollochang.work/worknot/worknot-20240427/</link>
      <pubDate>Sat, 27 Apr 2024 23:22:46 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240427/</guid>
      <description>查詢 java 所有的進程
❯ top -b -n 1 | grep java | cut -c 1-7 8190 15263 15512 16641 17148 假設我要刪除 java 全部的進程可以這樣處理
❯ top -b -n 1 | grep java | cut -c 1-7 | xargs kill -9 </description>
    </item>
    
    <item>
      <title>CLI 檢查網站憑證</title>
      <link>http://pollochang.work/worknot/worknot-20240426/</link>
      <pubDate>Fri, 26 Apr 2024 07:00:46 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240426/</guid>
      <description>curl curl https://www.google.com -v -k 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; 執行結果 ❯ curl https://www.google.com -v -k 2&amp;gt;&amp;amp;1 | grep -E &amp;#34;Connected to|subject|expire&amp;#34; * Connected to www.google.com (2404:6800:4012:2::2004) port 443 (#0) * subject: CN=www.google.com * expire date: Jun 10 20:38:48 2024 GMT &amp;lt; expires: -1 &amp;lt; set-cookie: 1P_JAR=2024-04-25-23; expires=Sat, 25-May-2024 23:03:14 GMT; path=/; domain=.google.com; Secure &amp;lt; set-cookie: AEC=AQTF6Hw4gUm8n5W0uPUDTe6vEa8fTROwT6DEAUWQ6FTKMp52DrhWnROmmw; expires=Tue, 22-Oct-2024 23:03:14 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax &amp;lt; set-cookie: NID=513=TZnGjLI3KvFu_SLuZJCrPktY6GMHeuK3Hg8ht9ojqTr_OgX460hGPFUccru0PZr2J1pWw_mynjevt8eTyWu0pN9gPXi4hcJkFUQzR9SJlTfypnftjNlM9CGEu1956tVk67u6tWkrNRa2zi8QdXzULlXJZ2wO1tBrzCGnmRJ4nyg; expires=Fri, 25-Oct-2024 23:03:14 GMT; path=/; domain=.</description>
    </item>
    
    <item>
      <title>linux 資料基礎分析</title>
      <link>http://pollochang.work/worknot/worknot-20240425/</link>
      <pubDate>Thu, 25 Apr 2024 22:16:23 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240425/</guid>
      <description> grep: 過濾資料 grep 要過濾出的資料 exampleFileSource.log &amp;gt; exampleFile.log cut 切除每行前 60 個字元 cut -b 60- exampleFile.log &amp;gt; exampleFile.2.log sort: 類似 sql distinct 效果 grep 要過濾出的資料 exampleFile.2.log | sort --unique </description>
    </item>
    
    <item>
      <title>程式進化史</title>
      <link>http://pollochang.work/worknot/worknot-20240416/</link>
      <pubDate>Tue, 16 Apr 2024 07:14:27 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240416/</guid>
      <description>筆記一下這些年我寫的糞 code 的優化流程
一開始寫的 被檢測為 CyclomaticComplexity 。程式如下:
package work.pollochang.twgcb import grails.gorm.transactions.Transactional import grails.web.servlet.mvc.GrailsParameterMap import org.hibernate.criterion.CriteriaSpecification import org.hibernate.type.StandardBasicTypes import work.pollochang.util.PFilterResult import work.pollochang.util.PFilterType /** * TWGCB 資料處理 */ @Transactional class TwGcbService { /** * 查詢 * @param params * @param filterType * @return 查詢結果 */ PFilterResult filter( GrailsParameterMap params, PFilterType filterType = PFilterType.DEFAULT ) { PFilterResult pFilterResult = new PFilterResult() params.max = (params.max ?: &amp;#39;10&amp;#39;).toInteger() params.offset = (params?.offset ?: &amp;#39;0&amp;#39;).toInteger() List&amp;lt;Twgcb&amp;gt; twgcbList = Twgcb.</description>
    </item>
    
    <item>
      <title>annotation 與 AOP</title>
      <link>http://pollochang.work/worknot/worknot-20240413/</link>
      <pubDate>Sat, 13 Apr 2024 17:12:49 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240413/</guid>
      <description>範例程式完整專案:
Java 基本內置 annotation @Override 重寫父層的方法
@Deprecated 表示該方法再為雷會被棄用
@SuppressWarnings 主要的用處就是忽略警告信息
規定 annotation 可以放在哪裡 類別 ElementType.TYPE : 能修飾類、接口、枚舉、注解 ElementType.FIELD : 能修飾字段、枚舉的常量 ElementType.METHOD : 能修飾方法 ElementType.PARAMETER : 能修飾方法參數 ElementType.CONSTRUCTOR : 能修飾構造函數 ElementType.LOCAL_VARIABLE : 能修飾局部變量 ElementType.ANNOTATION_TYPE : 能修飾注解 (元注解就是此種) ElementType.PACKAGE : 能修飾包 ElementType.TYPE_PARAMETER: (java8)類型參數聲明 ElementType.TYPE_USE: (java8)使用類型 ElementType.MODULE: (java9)模組聲明 ElementType.RECORD_COMPONENT: (java16)記錄組件 原始碼 /* * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved. * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</description>
    </item>
    
    <item>
      <title>KDE 桌面 CLI</title>
      <link>http://pollochang.work/worknot/worknot-20240409/</link>
      <pubDate>Tue, 09 Apr 2024 10:59:52 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240409/</guid>
      <description>KED 強制登出使用者 sudo pkill -KILL -u [username]] 是直接強制踢出指定使用者所有程序</description>
    </item>
    
    <item>
      <title>Mozilla Public License Version 2.0 中英文對照</title>
      <link>http://pollochang.work/worknot/worknot-20240408/</link>
      <pubDate>Mon, 08 Apr 2024 22:39:41 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240408/</guid>
      <description>英文原文 MOZILLA PUBLIC LICENSE Version 2.0 1. Definitions 1.1. “Contributor” means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software. 1.2. “Contributor Version” means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor&amp;#39;s Contribution. 1.3. “Contribution” means Covered Software of a particular Contributor. 1.4. “Covered Software” means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.</description>
    </item>
    
    <item>
      <title>windows 透過 CLI 檢查有沒有自動更新</title>
      <link>http://pollochang.work/worknot/worknot-20240328/</link>
      <pubDate>Thu, 28 Mar 2024 22:39:41 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240328/</guid>
      <description>今天突然收到客戶需要檢查windows 有沒有設定自動檢查更新，因為有多台實在懶得一台一台進入，然後一個一個點擊視窗擷圖，因此想說有沒有輸入 CLI 指令檢查的方法。
windows server 2000 以下是操作的版本
windows server
指令
reg query &amp;#34;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update&amp;#34; /v AUOptions 輸出結果 Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved. C:\Users\james&amp;gt;reg query &amp;#34;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update&amp;#34; /v AUOptions HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update AUOptions REG_DWORD 0x4 說明 AUOptions (REG_DWORD)：
1：在 [自動更新] 中停用 [讓我的電腦保持在最新狀態]。 2：通知下載和安裝。 3：自動下載並通知安裝。 4：自動下載及排程安裝。 5：允許本機系統管理員選取設定模式。 此選項不適用於 Windows 10 或更新版本。 7：通知安裝，並通知重新啟動。 僅限 (Windows Server 2016 和更新版本) windows server 2000 以後 可以透過 sc.exe 查詢 wuauserv 服務</description>
    </item>
    
    <item>
      <title>DB2 切 db2diag.log</title>
      <link>http://pollochang.work/worknot/worknot-20240325/</link>
      <pubDate>Mon, 25 Mar 2024 22:42:18 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240325/</guid>
      <description>今天在工作時碰到 db2diag.log 膨脹到把硬碟塞滿，在這邊分享一下處理過程
db2diag -A 可以很放心去執行，執行過程中不會對現形資料庫運作產生任何影響
操作資料庫環境 OS: RedHat 6 DB2 Version: 9.7 實做流程 檢查本機上可用的空間 [db2inst1@db2-node ~]$ df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/VolGroup-lv_root 44G 36G 6.1G 86% / tmpfs 20G 44M 20G 1% /dev/shm /dev/test1 477M 35M 417M 8% /boot /dev/test2 1.1T 288G 765G 28% /db2 檢查 db2diag.log 所佔用的空間 [db2inst1@db2-node ~]$ ll -h /home/db2inst1/sqllib/db2dump/db2diag.* -rw-rw-rw- 1 db2inst1 db2iadm1 12G Mar 25 22:27 /home/db2inst1/sqllib/db2dump/db2diag.log 執行切 db2diag.log [db2inst1@db2-node ~]$ db2diag -A db2diag: Moving &amp;#34;/home/db2inst1/sqllib/db2dump/db2diag.</description>
    </item>
    
    <item>
      <title>jmeter CLI 模式</title>
      <link>http://pollochang.work/worknot/worknot-20240314/</link>
      <pubDate>Thu, 14 Mar 2024 22:41:21 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240314/</guid>
      <description>前幾個月在幫專案做壓力測試，因為對方主機執行壓力測試環境是 Linux，於是我尋找一下JMeter 有沒有 CLI 模式下執行測試，順手紀錄一下。
壓力測試 CLI 範例 先廢話不多說，先線上範例，windows 跟 Linux 各舉例一個，Windows是後來順手寫一下，因為這樣我久可以不用開啟GUI介面操作啦。
Linux #!/bin/bash export groupT=&amp;#34;25-60&amp;#34; export homeDir=&amp;#34;/home/pollo&amp;#34; mkdir -p ${homeDir}/reports/${groupT}/report export JVM_ARGS=&amp;#34;-Xms10240m -Xmx10240m&amp;#34; ${homeDir}/apache-jmeter-5.5/bin/jmeter -n -t ${homeDir}/test.jmx -l ${homeDir}/reports/${groupT}/report/report.jtl -e -o ${homeDir}/reports/${groupT}/report windows set groupT=25-60 set homeDir=C:\Users\pollo\Desktop mkdir C:\Users\pollo\Desktop\reports\%groupT%\report set JVM_ARGS=&amp;#34;-Xmx80240m&amp;#34; C:\app\apache-jmeter-5.5\bin\jmeter -n -t C:\Users\pollo\Desktop\test.jmx -l %homeDir%\reports\%groupT%\report\report.jtl -e -o %homeDir%\reports\%groupT%\report 用CLI執行 JMeter 會產生一個Log檔: jmeter.log 。可以方便後追蹤。
參數說明 選項 說明 -n 指定 JMeter 在 CLI 模式下運作 -t jmx 文件路徑 -l jtl 測試紀錄檔案路徑 -j Jmeter.</description>
    </item>
    
    <item>
      <title>MSSQL 雜記</title>
      <link>http://pollochang.work/worknot/worknot-20240313-2/</link>
      <pubDate>Wed, 13 Mar 2024 23:41:46 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240313-2/</guid>
      <description>查詢執行很久的SQL SELECT TOP 10 [總執行時間(秒)] =CAST(a.total_elapsed_time / 1000000.0 AS DECIMAL(16, 2)) , [執行次數] =a.execution_count , [平均執行時間(秒)] =CAST(a.total_elapsed_time / 1000000.0 / a.execution_count AS DECIMAL(16, 2)) , [SQL指令] =SUBSTRING (b.text,(a.statement_start_offset/2) + 1,500) FROM sys.dm_exec_query_stats a CROSS APPLY sys.dm_exec_sql_text(a.sql_handle) as b WHERE a.total_elapsed_time &amp;gt; 0 AND B.[text] NOT LIKE &amp;#39;%SCHEMA_NAME%&amp;#39;--去除一些系統的SQL指令 ORDER BY [平均執行時間(秒)] DESC 查詢資料庫版本 SELECT @@VERSION AS &amp;#39;SQL Server Version Details&amp;#39; 查詢結果 Microsoft SQL Server 2014 - 12.0.2000.8 (X64) Feb 20 2014 20:04:26 Copyright (c) Microsoft Corporation Standard Edition (64-bit) on Windows NT 6.</description>
    </item>
    
    <item>
      <title>Oracle PL/SQL 學習筆記</title>
      <link>http://pollochang.work/worknot/worknot-20240313-1/</link>
      <pubDate>Wed, 13 Mar 2024 14:54:24 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240313-1/</guid>
      <description>切字串成陣列
regexp_substr select regexp_substr ( :str, &amp;#39;[^,]+&amp;#39;, 1, level ) value from dual 參考資料 How to split comma separated value strings into rows in Oracle Database REGEXP_SUBSTR </description>
    </item>
    
    <item>
      <title>Oracle PL/SQL 學習筆記</title>
      <link>http://pollochang.work/worknot/worknot-20240313/</link>
      <pubDate>Wed, 13 Mar 2024 14:42:44 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240313/</guid>
      <description>判斷式 if else if a &amp;gt; b then t := 0; elsif a &amp;gt; c then t := 1; else t := 2; end if; 迴圈 LOOP ... V_LOOP_CONT := V_LOOP_CONT +1 ; IF V_TOTAL_LOOP_CONT &amp;lt;= V_LOOP_CONT THEN EXIT; END IF; END LOOP; package head CREATE OR REPLACE PACKAGE PK_1 AS /****************************************************************************** NAME: PK_1 PURPOSE: PK_1 REVISIONS: Ver Date Author Description --------- ---------- --------------- ------------------------------------ 1.0 2024-03-13 PolloChang 1. 初次新增 ******************************************************************************/ FUNCTION FUNCTION_NAME_1 (P_VAL IN VARCHAR2) RETURN VARCHAR2; END PK_1; body CREATE OR REPLACE PACKAGE PK_1 AS /****************************************************************************** NAME: PK_1 PURPOSE: PK_1 REVISIONS: Ver Date Author Description --------- ---------- --------------- ------------------------------------ 1.</description>
    </item>
    
    <item>
      <title>Linux 發行板核心版本整理</title>
      <link>http://pollochang.work/worknot/worknot-20240309/</link>
      <pubDate>Sat, 09 Mar 2024 11:27:26 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240309/</guid>
      <description>前幾天在工作中因為要導入GBC，但是在客戶的系統當中有非RedHat衍生發行板的系統，所以想說用相近的 Linux Kernel 作為導入的基礎，在這邊把整好的核心版本整理一下
Linux 發行板 Kernel Version Rocky Linux 8 4.18.0 Rocky Linux 9 5.14.0 Red Hat Enterprise Linux 2.1 2.4.9 Red Hat Enterprise Linux 3 2.4.21 Red Hat Enterprise Linux 4 2.6.9 Red Hat Enterprise Linux 5 2.6.18 Red Hat Enterprise Linux 6 2.6.32 Red Hat Enterprise Linux 7 3.10.0 Red Hat Enterprise Linux 8 4.18.0 Red Hat Enterprise Linux 9 5.14.0 Oracle VM 3 4.1 Oracle Linux 6 2.</description>
    </item>
    
    <item>
      <title>Oracle 學習筆記</title>
      <link>http://pollochang.work/worknot/worknot-20240307/</link>
      <pubDate>Thu, 07 Mar 2024 22:43:06 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240307/</guid>
      <description>最近在工作上遇到Oracle 發生的系統效能問題，雖然有順利解決了，但是在解決的過程中似乎覺的自己對Oracle知識相當貧乏，於是在這邊筆記一下我學到的知識。
學習的過過程中難免會出現紀錄錯誤，而且目前是因為工作上需要而自學。因此內容有錯還請見諒。
Oracle Instance Instance 是一個由各種設定檔組成的記憶體結構，基本上當資料庫連線到Oracle 時是連接到 Instance。Instance 與 Database 是可以互不相依的，也就是說 Instance 與 Database 可以單獨存在。
以下是Oracle Instance 的架構圖
Instance 有兩中配置方式:
Single Instance Oracle RAC (Oracle Real Application Clusters) Single 是單純一個Database 配置一個 Instance ，而 Oracle RAC 是一個 Database 配置多個 Instance。
在 Oracle 12c 之後可以將 Read/Write 與 Read-Only 兩個 不同的Instance 共存在 同一個 Database 中。在12c之前除非是 Standby database 都是 Read/Write。
Instance 如果需要改 Read/Write 或是 Read-Only 可以透過參數 INSTANCE_MODE 調整。
INSTANCE_MODE = { READ-WRITE | READ-ONLY | READ-MOSTLY } Oracle資料庫結構概述 記憶體結構（Instance）：記憶體結構包含由一些記憶體空間及與處理程式(Process)所組合而成的，會隨著資料庫的開啟與關閉而消失。 實體結構（Database）：實體結構包含存在儲存媒體上的一些檔案，不會因為資料庫開啟關閉而消失。 Oracle 記憶體結構 共享記憶體（System Global Area；SGA）：主要是做資料交換的暫存記憶體空間。 背景處理程式（Background Process）：主要是Oracle記憶體結構與實體結構之間的溝通橋樑。 軟體程式碼區域（Software Code Area）：主要是存放Oracle軟體可執行程式的地方，同時軟體程式碼區域也是屬於Oracle Instance的一部份。 PGA（Program Global Area；PGA）：PGA是一塊私有的記憶體區塊，包含了有server process正在執行的工作資訊。每一個server process都有一個自己的PGA。。 UGA（User Global Area；UGA）：UGA主要是儲存使用者特定的連線狀態，UGA可能在SGA中分配，也可能在PGA中分配，這取決於Oracle的網路連線方式，看是使用多執行緒伺服器模式（Multi-Thread Server）還是專屬伺服器模式（Dedicated Server）。 其他處理程式（Other Process）：主要是使用者與Oracle記憶體結構之間的溝通橋樑。 Oracle 記憶體模組 Oracle 對於記憶體主要以兩個模組管理:KSM、KGH</description>
    </item>
    
    <item>
      <title>oracle 監控SQL 效能</title>
      <link>http://pollochang.work/worknot/worknot-20240305/</link>
      <pubDate>Tue, 05 Mar 2024 00:02:22 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240305/</guid>
      <description>這幾天在調校系統校能，想說從資料庫快取中看看能不能找出花費系統高的系統資源，後來從網路拼拼湊湊加上過去的經驗拼湊下面的監控SQL。拼湊好後，會透過kettle 搭配系統排程匯出查詢結果。
SELECT * FROM ( SELECT 1 QUERY_STATUS, SA.SQL_ID, SA.SQL_TEXT, SA.SQL_FULLTEXT, SA.EXECUTIONS EXECUTIONS, --執行次數 ROUND(SA.ELAPSED_TIME / 1000000, 2) ELAPSED_TIME, --總共執行時間(秒) ROUND(SA.ELAPSED_TIME / 1000000 / SA.EXECUTIONS, 2) ELAPSED_TIME_AVERAGE, --平均執行時間(秒) ROUND(SA.CPU_TIME / 1000000, 2) CPU_TIME, --CPU 執行時間 SA.DISK_READS, ROUND(SA.PLSQL_EXEC_TIME / 1000000, 2) PLSQL_EXEC_TIME, --(秒) ROUND(SA.USER_IO_WAIT_TIME / 1000000, 2) USER_IO_WAIT_TIME, --(秒) SA.COMMAND_TYPE, SA.HASH_VALUE, SA.PARSING_USER_ID PARSING_USER_ID, U.USERNAME USERNAME --帳號名稱 FROM V$SQLAREA SA LEFT JOIN ALL_USERS U ON SA.PARSING_USER_ID = U.USER_ID WHERE SA.EXECUTIONS &amp;gt; 0 ORDER BY (SA.</description>
    </item>
    
    <item>
      <title>oracle 記憶體監控</title>
      <link>http://pollochang.work/worknot/worknot-20240304/</link>
      <pubDate>Mon, 04 Mar 2024 00:02:22 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240304/</guid>
      <description>透過 v$sgastat 、v$pgastat 檢測 SGA PGA 空間使用狀況
select name,used,free, pctused, max_allocated , sysdate opdt from ( select name,total,round(total-free,2) used, round(free,2) free,round((total-free)/total*100,2) pctused, round(MAX_ALLOCATED,2) MAX_ALLOCATED from ( select &amp;#39;SGA&amp;#39; name,(select sum(value/1024/1024) from v$sga) total, (SELECT SUM (bytes/1024/1024) FROM V$SGAINFO WHERE NAME=&amp;#39;Maximum SGA Size&amp;#39;) MAX_ALLOCATED , (select sum(bytes/1024/1024) from v$sgastat where name=&amp;#39;free memory&amp;#39;)free from dual ) union select name,total,round(used,2)used,round(total-used,2)free,round(used/total*100,2) pctused,round(MAX_ALLOCATED,2) from ( select &amp;#39;PGA&amp;#39; name,(select value/1024/1024 total from v$pgastat where name=&amp;#39;aggregate PGA target parameter&amp;#39;)total, (SELECT (value/1024/1024) FROM V$PGASTAT WHERE NAME = &amp;#39;maximum PGA allocated&amp;#39;) MAX_ALLOCATED, (select value/1024/1024 used from v$pgastat where name=&amp;#39;total PGA allocated&amp;#39;)used from dual ) ); 參考資料 Database Reference-8.</description>
    </item>
    
    <item>
      <title>Worknot 20240301</title>
      <link>http://pollochang.work/worknot/worknot-20240301/</link>
      <pubDate>Fri, 01 Mar 2024 23:10:12 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20240301/</guid>
      <description>今天在工作上遇到Oracle資料庫突然無法連線，突然想到前幾天在資料庫監控中發現Tablespace已經快滿了，於是著手處理。以下是處理的紀錄。
環境 OS: OracleLinux7 DataBase: Oracle 18c RAC 進入資料庫檢查 Tablespace 空間是否足夠 並著手處理 因為最近一次檢查是發現audit所在的 tablespace 空間快滿了，加上發生資料庫遠端連線無法正常連線，所以只能進入資料庫本機檢查。
進入資料庫主機 切換帳號到oracle 操作 su - oracle 執行 sqlplus sqlplus / as sysdba 執行下列SQL檢查 select a.TABLESPACE_NAME, to_char(a.BYTES/(1024*1024),&amp;#39;999,999&amp;#39;) &amp;#34;Size(MB)&amp;#34;, to_char(round((a.BYTES-b.BYTES)/(1024*1024),0),&amp;#39;999,999&amp;#39;) &amp;#34;Used(MB)&amp;#34;, to_char(b.BYTES/(1024*1024),&amp;#39;999,999&amp;#39;) &amp;#34;Avail(MB)&amp;#34; from (select TABLESPACE_NAME, sum(BYTES) &amp;#34;BYTES&amp;#34; from dba_data_files group by tablespace_name) a, (select TABLESPACE_NAME,sum(BYTES) &amp;#34;BYTES&amp;#34; from dba_free_space group by tablespace_name) b where a.TABLESPACE_NAME=b.TABLESPACE_NAME; 經過檢查確定發現AUD_TBS確定已經滿了。經詢問過DBA協助判斷確認需要增加新的 datafile ，因為一個datafile預設最大只能到32GB。
TABLESPACE_NAME Size(MB) Used(MB) Avail(MB ------------------------------ -------- -------- -------- AUD_TBS 32,768 32,740 28 TBS_1 258,048 160,335 97,713 TBS_2 25,600 24,241 1,359 事後我也發現可以從 dba_data_files 檢查 欄位: BLOCKS 與 MAXBLOCKS 值是否相等判斷 datafile 是否滿。</description>
    </item>
    
    <item>
      <title>Fabric-OS-CLI</title>
      <link>http://pollochang.work/worknot/fabric-os-cli/</link>
      <pubDate>Mon, 22 May 2023 09:00:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/fabric-os-cli/</guid>
      <description> 文件版本: 20240522 文件撰寫人: PolloChang userconfig (帳號管管理) 用途: 帳號管管理 列出所有帳號 userConfig --show -a 新增帳號 userConfig --add [account] -p [password] -r admin -a 0-255 停用帳號 userConfig --change [account] -e no 文件變更紀錄 20240522: 初版 參考資料 brocade-300_administrator%20guide4_en-us.pdf </description>
    </item>
    
    <item>
      <title>Fabric-OS-introduction</title>
      <link>http://pollochang.work/worknot/fabric-os-introduction/</link>
      <pubDate>Mon, 22 May 2023 09:00:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/fabric-os-introduction/</guid>
      <description>文件版本: 20240522 文件撰寫人: PolloChang Fabric Operating System (簡稱: FOS)，是 Broadcom 交換器中的作業系統
https://archive.org/details/hp-816-san-switch-brocade-200e
預設帳號 root admin factory user 首次登入用 admin 進行進入系統，預設密碼是 password。登入後會要求更改下列帳號的密碼
root admin factory user 系統角色 (rolename) admin Duties: All administration Description: All administrative commands BasicSwitchAdmin Duties: Restricted switch administration Description: Mostly monitoring with limited switch (local) commands SwitchAdmin Duties: Local switch administration Description: Most switch (local) commands, excluding security, user management, and zoning commands zoneadmin Duties: Zone administration Description: Zone management commands only Operator: Duties: General switch administration Description: Routine switch-maintenance commands.</description>
    </item>
    
    <item>
      <title>GC實驗: String 相接 與 系統效能 關係</title>
      <link>http://pollochang.work/worknot/worknot-20230414/</link>
      <pubDate>Fri, 14 Apr 2023 20:53:54 +0800</pubDate>
      
      <guid>http://pollochang.work/worknot/worknot-20230414/</guid>
      <description>做這個實驗只是想要說服同事，系統中有出現大量的字串相接，會讓系統效能變差。可以透過 StringBuffer 優化。
實驗目的 了解String 相接 與 系統效能 關係
實踐環境 java version: java 6 實驗環境 -Xms30M -Xmx30M -Xmn10M -Xss256k -XX:MaxPermSize=2m -XX:+UseConcMarkSweepGC -XX:CMSFullGCsBeforeCompaction=5 -XX:+CMSScavengeBeforeRemark -XX:+ScavengeBeforeFullGC -XX:MaxTenuringThreshold=30 -XX:+UseCMSCompactAtFullCollection -XX:CMSInitiatingOccupancyFraction=80 -XX:+UseCMSInitiatingOccupancyOnly -XX:+CMSParallelRemarkEnabled -Xloggc:/home/jameschang/test-gc.log -XX:+DisableExplicitGC -verbose:gc -server 實驗項目 實驗項目: 單純 String 接拼 實驗程式碼 public class TestString{ public static void main(String[] args){ String test = &amp;#34;&amp;#34;; for(int i = 0; i &amp;lt;- 50000; i++&amp;gt;){ test += &amp;#34;1234&amp;#34;+&amp;#34;5678&amp;#34;; } } } 實驗項目: StringBuffer 接字串 實驗程式碼 public class TestString{ public static void main(String[] args){ StringBuffer test = new StringBuffer(); for(int i = 0; i &amp;lt;- 50000; i++&amp;gt;){ test.</description>
    </item>
    
  </channel>
</rss>
